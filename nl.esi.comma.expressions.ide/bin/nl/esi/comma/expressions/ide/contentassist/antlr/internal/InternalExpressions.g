/*
 * generated by Xtext 2.25.0
 */
grammar InternalExpressions;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package nl.esi.comma.expressions.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package nl.esi.comma.expressions.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import nl.esi.comma.expressions.services.ExpressionsGrammarAccess;

}
@parser::members {
	private ExpressionsGrammarAccess grammarAccess;

	public void setGrammarAccess(ExpressionsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
		(rule__Variable__NameAssignment)
		{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionLevel1ParserRuleCall()); }
		ruleExpressionLevel1
		{ after(grammarAccess.getExpressionAccess().getExpressionLevel1ParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel1
entryRuleExpressionLevel1
:
{ before(grammarAccess.getExpressionLevel1Rule()); }
	 ruleExpressionLevel1
{ after(grammarAccess.getExpressionLevel1Rule()); } 
	 EOF 
;

// Rule ExpressionLevel1
ruleExpressionLevel1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup()); }
		(rule__ExpressionLevel1__Group__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel2
entryRuleExpressionLevel2
:
{ before(grammarAccess.getExpressionLevel2Rule()); }
	 ruleExpressionLevel2
{ after(grammarAccess.getExpressionLevel2Rule()); } 
	 EOF 
;

// Rule ExpressionLevel2
ruleExpressionLevel2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup()); }
		(rule__ExpressionLevel2__Group__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel3
entryRuleExpressionLevel3
:
{ before(grammarAccess.getExpressionLevel3Rule()); }
	 ruleExpressionLevel3
{ after(grammarAccess.getExpressionLevel3Rule()); } 
	 EOF 
;

// Rule ExpressionLevel3
ruleExpressionLevel3 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup()); }
		(rule__ExpressionLevel3__Group__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel4
entryRuleExpressionLevel4
:
{ before(grammarAccess.getExpressionLevel4Rule()); }
	 ruleExpressionLevel4
{ after(grammarAccess.getExpressionLevel4Rule()); } 
	 EOF 
;

// Rule ExpressionLevel4
ruleExpressionLevel4 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getGroup()); }
		(rule__ExpressionLevel4__Group__0)
		{ after(grammarAccess.getExpressionLevel4Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel5
entryRuleExpressionLevel5
:
{ before(grammarAccess.getExpressionLevel5Rule()); }
	 ruleExpressionLevel5
{ after(grammarAccess.getExpressionLevel5Rule()); } 
	 EOF 
;

// Rule ExpressionLevel5
ruleExpressionLevel5 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup()); }
		(rule__ExpressionLevel5__Group__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel6
entryRuleExpressionLevel6
:
{ before(grammarAccess.getExpressionLevel6Rule()); }
	 ruleExpressionLevel6
{ after(grammarAccess.getExpressionLevel6Rule()); } 
	 EOF 
;

// Rule ExpressionLevel6
ruleExpressionLevel6 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel6Access().getGroup()); }
		(rule__ExpressionLevel6__Group__0)
		{ after(grammarAccess.getExpressionLevel6Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel7
entryRuleExpressionLevel7
:
{ before(grammarAccess.getExpressionLevel7Rule()); }
	 ruleExpressionLevel7
{ after(grammarAccess.getExpressionLevel7Rule()); } 
	 EOF 
;

// Rule ExpressionLevel7
ruleExpressionLevel7 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel7Access().getAlternatives()); }
		(rule__ExpressionLevel7__Alternatives)
		{ after(grammarAccess.getExpressionLevel7Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionNot
entryRuleExpressionNot
:
{ before(grammarAccess.getExpressionNotRule()); }
	 ruleExpressionNot
{ after(grammarAccess.getExpressionNotRule()); } 
	 EOF 
;

// Rule ExpressionNot
ruleExpressionNot 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionNotAccess().getGroup()); }
		(rule__ExpressionNot__Group__0)
		{ after(grammarAccess.getExpressionNotAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionMinus
entryRuleExpressionMinus
:
{ before(grammarAccess.getExpressionMinusRule()); }
	 ruleExpressionMinus
{ after(grammarAccess.getExpressionMinusRule()); } 
	 EOF 
;

// Rule ExpressionMinus
ruleExpressionMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionMinusAccess().getGroup()); }
		(rule__ExpressionMinus__Group__0)
		{ after(grammarAccess.getExpressionMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionPlus
entryRuleExpressionPlus
:
{ before(grammarAccess.getExpressionPlusRule()); }
	 ruleExpressionPlus
{ after(grammarAccess.getExpressionPlusRule()); } 
	 EOF 
;

// Rule ExpressionPlus
ruleExpressionPlus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionPlusAccess().getGroup()); }
		(rule__ExpressionPlus__Group__0)
		{ after(grammarAccess.getExpressionPlusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionLevel8
entryRuleExpressionLevel8
:
{ before(grammarAccess.getExpressionLevel8Rule()); }
	 ruleExpressionLevel8
{ after(grammarAccess.getExpressionLevel8Rule()); } 
	 EOF 
;

// Rule ExpressionLevel8
ruleExpressionLevel8 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionLevel8Access().getAlternatives()); }
		(rule__ExpressionLevel8__Alternatives)
		{ after(grammarAccess.getExpressionLevel8Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionBracket
entryRuleExpressionBracket
:
{ before(grammarAccess.getExpressionBracketRule()); }
	 ruleExpressionBracket
{ after(grammarAccess.getExpressionBracketRule()); } 
	 EOF 
;

// Rule ExpressionBracket
ruleExpressionBracket 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionBracketAccess().getGroup()); }
		(rule__ExpressionBracket__Group__0)
		{ after(grammarAccess.getExpressionBracketAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionConstantBool
entryRuleExpressionConstantBool
:
{ before(grammarAccess.getExpressionConstantBoolRule()); }
	 ruleExpressionConstantBool
{ after(grammarAccess.getExpressionConstantBoolRule()); } 
	 EOF 
;

// Rule ExpressionConstantBool
ruleExpressionConstantBool 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConstantBoolAccess().getValueAssignment()); }
		(rule__ExpressionConstantBool__ValueAssignment)
		{ after(grammarAccess.getExpressionConstantBoolAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionConstantInt
entryRuleExpressionConstantInt
:
{ before(grammarAccess.getExpressionConstantIntRule()); }
	 ruleExpressionConstantInt
{ after(grammarAccess.getExpressionConstantIntRule()); } 
	 EOF 
;

// Rule ExpressionConstantInt
ruleExpressionConstantInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConstantIntAccess().getValueAssignment()); }
		(rule__ExpressionConstantInt__ValueAssignment)
		{ after(grammarAccess.getExpressionConstantIntAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionConstantString
entryRuleExpressionConstantString
:
{ before(grammarAccess.getExpressionConstantStringRule()); }
	 ruleExpressionConstantString
{ after(grammarAccess.getExpressionConstantStringRule()); } 
	 EOF 
;

// Rule ExpressionConstantString
ruleExpressionConstantString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionConstantStringAccess().getValueAssignment()); }
		(rule__ExpressionConstantString__ValueAssignment)
		{ after(grammarAccess.getExpressionConstantStringAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionVariable
entryRuleExpressionVariable
:
{ before(grammarAccess.getExpressionVariableRule()); }
	 ruleExpressionVariable
{ after(grammarAccess.getExpressionVariableRule()); } 
	 EOF 
;

// Rule ExpressionVariable
ruleExpressionVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionVariableAccess().getNameAssignment()); }
		(rule__ExpressionVariable__NameAssignment)
		{ after(grammarAccess.getExpressionVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionQuantifier
entryRuleExpressionQuantifier
:
{ before(grammarAccess.getExpressionQuantifierRule()); }
	 ruleExpressionQuantifier
{ after(grammarAccess.getExpressionQuantifierRule()); } 
	 EOF 
;

// Rule ExpressionQuantifier
ruleExpressionQuantifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionQuantifierAccess().getGroup()); }
		(rule__ExpressionQuantifier__Group__0)
		{ after(grammarAccess.getExpressionQuantifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionTypeAnnotated
entryRuleExpressionTypeAnnotated
:
{ before(grammarAccess.getExpressionTypeAnnotatedRule()); }
	 ruleExpressionTypeAnnotated
{ after(grammarAccess.getExpressionTypeAnnotatedRule()); } 
	 EOF 
;

// Rule ExpressionTypeAnnotated
ruleExpressionTypeAnnotated 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup()); }
		(rule__ExpressionTypeAnnotated__Group__0)
		{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeAnnotation
entryRuleTypeAnnotation
:
{ before(grammarAccess.getTypeAnnotationRule()); }
	 ruleTypeAnnotation
{ after(grammarAccess.getTypeAnnotationRule()); } 
	 EOF 
;

// Rule TypeAnnotation
ruleTypeAnnotation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAnnotationAccess().getGroup()); }
		(rule__TypeAnnotation__Group__0)
		{ after(grammarAccess.getTypeAnnotationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePair
entryRulePair
:
{ before(grammarAccess.getPairRule()); }
	 rulePair
{ after(grammarAccess.getPairRule()); } 
	 EOF 
;

// Rule Pair
rulePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPairAccess().getGroup()); }
		(rule__Pair__Group__0)
		{ after(grammarAccess.getPairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule QUANTIFIER
ruleQUANTIFIER
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQUANTIFIERAccess().getAlternatives()); }
		(rule__QUANTIFIER__Alternatives)
		{ after(grammarAccess.getQUANTIFIERAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup_1_0()); }
		(rule__ExpressionLevel1__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel1Access().getGroup_1_1()); }
		(rule__ExpressionLevel1__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel1Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Alternatives_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getANDKeyword_1_0_1_0()); }
		'AND'
		{ after(grammarAccess.getExpressionLevel1Access().getANDKeyword_1_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel1Access().getAndKeyword_1_0_1_1()); }
		'and'
		{ after(grammarAccess.getExpressionLevel1Access().getAndKeyword_1_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Alternatives_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getORKeyword_1_1_1_0()); }
		'OR'
		{ after(grammarAccess.getExpressionLevel1Access().getORKeyword_1_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel1Access().getOrKeyword_1_1_1_1()); }
		'or'
		{ after(grammarAccess.getExpressionLevel1Access().getOrKeyword_1_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_0()); }
		(rule__ExpressionLevel2__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel2Access().getGroup_1_1()); }
		(rule__ExpressionLevel2__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel2Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup_1_0()); }
		(rule__ExpressionLevel3__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup_1_1()); }
		(rule__ExpressionLevel3__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup_1_2()); }
		(rule__ExpressionLevel3__Group_1_2__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel3Access().getGroup_1_3()); }
		(rule__ExpressionLevel3__Group_1_3__0)
		{ after(grammarAccess.getExpressionLevel3Access().getGroup_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getGroup_1_0()); }
		(rule__ExpressionLevel4__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel4Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel4Access().getGroup_1_1()); }
		(rule__ExpressionLevel4__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel4Access().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_0()); }
		(rule__ExpressionLevel5__Group_1_0__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_1()); }
		(rule__ExpressionLevel5__Group_1_1__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_2()); }
		(rule__ExpressionLevel5__Group_1_2__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_3()); }
		(rule__ExpressionLevel5__Group_1_3__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel5Access().getGroup_1_4()); }
		(rule__ExpressionLevel5__Group_1_4__0)
		{ after(grammarAccess.getExpressionLevel5Access().getGroup_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel7__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel7Access().getExpressionNotParserRuleCall_0()); }
		ruleExpressionNot
		{ after(grammarAccess.getExpressionLevel7Access().getExpressionNotParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel7Access().getExpressionMinusParserRuleCall_1()); }
		ruleExpressionMinus
		{ after(grammarAccess.getExpressionLevel7Access().getExpressionMinusParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel7Access().getExpressionPlusParserRuleCall_2()); }
		ruleExpressionPlus
		{ after(grammarAccess.getExpressionLevel7Access().getExpressionPlusParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel7Access().getExpressionLevel8ParserRuleCall_3()); }
		ruleExpressionLevel8
		{ after(grammarAccess.getExpressionLevel7Access().getExpressionLevel8ParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionNotAccess().getNOTKeyword_0_0()); }
		'NOT'
		{ after(grammarAccess.getExpressionNotAccess().getNOTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionNotAccess().getNotKeyword_0_1()); }
		'not'
		{ after(grammarAccess.getExpressionNotAccess().getNotKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel8__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionBracketParserRuleCall_0()); }
		ruleExpressionBracket
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionBracketParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionConstantBoolParserRuleCall_1()); }
		ruleExpressionConstantBool
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionConstantBoolParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionConstantIntParserRuleCall_2()); }
		ruleExpressionConstantInt
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionConstantIntParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionConstantStringParserRuleCall_3()); }
		ruleExpressionConstantString
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionConstantStringParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionVariableParserRuleCall_4()); }
		ruleExpressionVariable
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionVariableParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionQuantifierParserRuleCall_5()); }
		ruleExpressionQuantifier
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionQuantifierParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionLevel8Access().getExpressionTypeAnnotatedParserRuleCall_6()); }
		ruleExpressionTypeAnnotated
		{ after(grammarAccess.getExpressionLevel8Access().getExpressionTypeAnnotatedParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0()); }
		(rule__ExpressionTypeAnnotated__Group_1_0__0)
		{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1()); }
		(rule__ExpressionTypeAnnotated__Group_1_1__0)
		{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QUANTIFIER__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQUANTIFIERAccess().getEXISTSEnumLiteralDeclaration_0()); }
		('exists')
		{ after(grammarAccess.getQUANTIFIERAccess().getEXISTSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getQUANTIFIERAccess().getFORALLEnumLiteralDeclaration_1()); }
		('forAll')
		{ after(grammarAccess.getQUANTIFIERAccess().getFORALLEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getQUANTIFIERAccess().getDELETEEnumLiteralDeclaration_2()); }
		('delete')
		{ after(grammarAccess.getQUANTIFIERAccess().getDELETEEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group__0__Impl
	rule__ExpressionLevel1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionLevel2ParserRuleCall_0()); }
	ruleExpressionLevel2
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionLevel2ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getAlternatives_1()); }
	(rule__ExpressionLevel1__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel1Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel1__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__0__Impl
	rule__ExpressionLevel1__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionAndLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionAndLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__1__Impl
	rule__ExpressionLevel1__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getAlternatives_1_0_1()); }
	(rule__ExpressionLevel1__Alternatives_1_0_1)
	{ after(grammarAccess.getExpressionLevel1Access().getAlternatives_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel1__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel1__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__0__Impl
	rule__ExpressionLevel1__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getExpressionOrLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel1Access().getExpressionOrLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__1__Impl
	rule__ExpressionLevel1__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getAlternatives_1_1_1()); }
	(rule__ExpressionLevel1__Alternatives_1_1_1)
	{ after(grammarAccess.getExpressionLevel1Access().getAlternatives_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel1__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel1__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group__0__Impl
	rule__ExpressionLevel2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionLevel3ParserRuleCall_0()); }
	ruleExpressionLevel3
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionLevel3ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getAlternatives_1()); }
	(rule__ExpressionLevel2__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel2Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__0__Impl
	rule__ExpressionLevel2__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionEqualLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionEqualLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__1__Impl
	rule__ExpressionLevel2__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getEqualsSignEqualsSignKeyword_1_0_1()); }
	'=='
	{ after(grammarAccess.getExpressionLevel2Access().getEqualsSignEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel2__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__0__Impl
	rule__ExpressionLevel2__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExpressionNEqualLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel2Access().getExpressionNEqualLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__1__Impl
	rule__ExpressionLevel2__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getExclamationMarkEqualsSignKeyword_1_1_1()); }
	'!='
	{ after(grammarAccess.getExpressionLevel2Access().getExclamationMarkEqualsSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel2__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel2__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group__0__Impl
	rule__ExpressionLevel3__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionLevel4ParserRuleCall_0()); }
	ruleExpressionLevel4
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionLevel4ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getAlternatives_1()); }
	(rule__ExpressionLevel3__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel3Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_0__0__Impl
	rule__ExpressionLevel3__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionGeqLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionGeqLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_0__1__Impl
	rule__ExpressionLevel3__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getGreaterThanSignEqualsSignKeyword_1_0_1()); }
	'>='
	{ after(grammarAccess.getExpressionLevel3Access().getGreaterThanSignEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_1__0__Impl
	rule__ExpressionLevel3__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionGreaterLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionGreaterLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_1__1__Impl
	rule__ExpressionLevel3__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getGreaterThanSignKeyword_1_1_1()); }
	'>'
	{ after(grammarAccess.getExpressionLevel3Access().getGreaterThanSignKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_2__0__Impl
	rule__ExpressionLevel3__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionLeqLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionLeqLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_2__1__Impl
	rule__ExpressionLevel3__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getLessThanSignEqualsSignKeyword_1_2_1()); }
	'<='
	{ after(grammarAccess.getExpressionLevel3Access().getLessThanSignEqualsSignKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_2_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_2_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel3__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_3__0__Impl
	rule__ExpressionLevel3__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getExpressionLessLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getExpressionLevel3Access().getExpressionLessLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_3__1__Impl
	rule__ExpressionLevel3__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getLessThanSignKeyword_1_3_1()); }
	'<'
	{ after(grammarAccess.getExpressionLevel3Access().getLessThanSignKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel3__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_3_2()); }
	(rule__ExpressionLevel3__RightAssignment_1_3_2)
	{ after(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel4__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group__0__Impl
	rule__ExpressionLevel4__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getExpressionLevel5ParserRuleCall_0()); }
	ruleExpressionLevel5
	{ after(grammarAccess.getExpressionLevel4Access().getExpressionLevel5ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getAlternatives_1()); }
	(rule__ExpressionLevel4__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel4Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel4__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_0__0__Impl
	rule__ExpressionLevel4__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getExpressionAdditionLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel4Access().getExpressionAdditionLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_0__1__Impl
	rule__ExpressionLevel4__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getPlusSignKeyword_1_0_1()); }
	'+'
	{ after(grammarAccess.getExpressionLevel4Access().getPlusSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel4__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel4__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_1__0__Impl
	rule__ExpressionLevel4__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getExpressionSubtractionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel4Access().getExpressionSubtractionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_1__1__Impl
	rule__ExpressionLevel4__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getHyphenMinusKeyword_1_1_1()); }
	'-'
	{ after(grammarAccess.getExpressionLevel4Access().getHyphenMinusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel4__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel4__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group__0__Impl
	rule__ExpressionLevel5__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionLevel6ParserRuleCall_0()); }
	ruleExpressionLevel6
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionLevel6ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getAlternatives_1()); }
	(rule__ExpressionLevel5__Alternatives_1)*
	{ after(grammarAccess.getExpressionLevel5Access().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_0__0__Impl
	rule__ExpressionLevel5__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionMultiplyLeftAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionMultiplyLeftAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_0__1__Impl
	rule__ExpressionLevel5__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getAsteriskKeyword_1_0_1()); }
	'*'
	{ after(grammarAccess.getExpressionLevel5Access().getAsteriskKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_0_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_0_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_1__0__Impl
	rule__ExpressionLevel5__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionDivisionLeftAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionDivisionLeftAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_1__1__Impl
	rule__ExpressionLevel5__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getSolidusKeyword_1_1_1()); }
	'/'
	{ after(grammarAccess.getExpressionLevel5Access().getSolidusKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_1_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_1_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_2__0__Impl
	rule__ExpressionLevel5__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionMaximumLeftAction_1_2_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionMaximumLeftAction_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_2__1__Impl
	rule__ExpressionLevel5__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getMaxKeyword_1_2_1()); }
	'max'
	{ after(grammarAccess.getExpressionLevel5Access().getMaxKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_2_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_2_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_3__0__Impl
	rule__ExpressionLevel5__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionMinimumLeftAction_1_3_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionMinimumLeftAction_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_3__1__Impl
	rule__ExpressionLevel5__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getMinKeyword_1_3_1()); }
	'min'
	{ after(grammarAccess.getExpressionLevel5Access().getMinKeyword_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_3_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_3_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel5__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_4__0__Impl
	rule__ExpressionLevel5__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getExpressionModuloLeftAction_1_4_0()); }
	()
	{ after(grammarAccess.getExpressionLevel5Access().getExpressionModuloLeftAction_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_4__1__Impl
	rule__ExpressionLevel5__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getModKeyword_1_4_1()); }
	'mod'
	{ after(grammarAccess.getExpressionLevel5Access().getModKeyword_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel5__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__Group_1_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_4_2()); }
	(rule__ExpressionLevel5__RightAssignment_1_4_2)
	{ after(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel6__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group__0__Impl
	rule__ExpressionLevel6__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getExpressionLevel7ParserRuleCall_0()); }
	ruleExpressionLevel7
	{ after(grammarAccess.getExpressionLevel6Access().getExpressionLevel7ParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getGroup_1()); }
	(rule__ExpressionLevel6__Group_1__0)?
	{ after(grammarAccess.getExpressionLevel6Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionLevel6__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group_1__0__Impl
	rule__ExpressionLevel6__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getExpressionPowerLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionLevel6Access().getExpressionPowerLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group_1__1__Impl
	rule__ExpressionLevel6__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getCircumflexAccentKeyword_1_1()); }
	'^'
	{ after(grammarAccess.getExpressionLevel6Access().getCircumflexAccentKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionLevel6__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionLevel6Access().getRightAssignment_1_2()); }
	(rule__ExpressionLevel6__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionLevel6Access().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionNot__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionNot__Group__0__Impl
	rule__ExpressionNot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNotAccess().getAlternatives_0()); }
	(rule__ExpressionNot__Alternatives_0)
	{ after(grammarAccess.getExpressionNotAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionNot__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNotAccess().getSubAssignment_1()); }
	(rule__ExpressionNot__SubAssignment_1)
	{ after(grammarAccess.getExpressionNotAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionMinus__Group__0__Impl
	rule__ExpressionMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionMinusAccess().getHyphenMinusKeyword_0()); }
	'-'
	{ after(grammarAccess.getExpressionMinusAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionMinusAccess().getSubAssignment_1()); }
	(rule__ExpressionMinus__SubAssignment_1)
	{ after(grammarAccess.getExpressionMinusAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionPlus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionPlus__Group__0__Impl
	rule__ExpressionPlus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionPlusAccess().getPlusSignKeyword_0()); }
	'+'
	{ after(grammarAccess.getExpressionPlusAccess().getPlusSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionPlus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionPlusAccess().getSubAssignment_1()); }
	(rule__ExpressionPlus__SubAssignment_1)
	{ after(grammarAccess.getExpressionPlusAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionBracket__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__0__Impl
	rule__ExpressionBracket__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExpressionBracketAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__1__Impl
	rule__ExpressionBracket__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getSubAssignment_1()); }
	(rule__ExpressionBracket__SubAssignment_1)
	{ after(grammarAccess.getExpressionBracketAccess().getSubAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionBracket__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getExpressionBracketAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionQuantifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionQuantifier__Group__0__Impl
	rule__ExpressionQuantifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionQuantifierAccess().getQuantifierAssignment_0()); }
	(rule__ExpressionQuantifier__QuantifierAssignment_0)
	{ after(grammarAccess.getExpressionQuantifierAccess().getQuantifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionQuantifier__Group__1__Impl
	rule__ExpressionQuantifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionQuantifierAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getExpressionQuantifierAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionQuantifier__Group__2__Impl
	rule__ExpressionQuantifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionQuantifierAccess().getIteratorAssignment_2()); }
	(rule__ExpressionQuantifier__IteratorAssignment_2)
	{ after(grammarAccess.getExpressionQuantifierAccess().getIteratorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionQuantifier__Group__3__Impl
	rule__ExpressionQuantifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionQuantifierAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getExpressionQuantifierAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionQuantifier__Group__4__Impl
	rule__ExpressionQuantifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionQuantifierAccess().getCollectionAssignment_4()); }
	(rule__ExpressionQuantifier__CollectionAssignment_4)
	{ after(grammarAccess.getExpressionQuantifierAccess().getCollectionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionQuantifier__Group__5__Impl
	rule__ExpressionQuantifier__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionQuantifierAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getExpressionQuantifierAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionQuantifier__Group__6__Impl
	rule__ExpressionQuantifier__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionQuantifierAccess().getConditionAssignment_6()); }
	(rule__ExpressionQuantifier__ConditionAssignment_6)
	{ after(grammarAccess.getExpressionQuantifierAccess().getConditionAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionQuantifier__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionQuantifierAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getExpressionQuantifierAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTypeAnnotated__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group__0__Impl
	rule__ExpressionTypeAnnotated__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getTypeAnnotationParserRuleCall_0()); }
	ruleTypeAnnotation
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getTypeAnnotationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getAlternatives_1()); }
	(rule__ExpressionTypeAnnotated__Alternatives_1)
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTypeAnnotated__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_0__0__Impl
	rule__ExpressionTypeAnnotated__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getExpressionVectorTypeAnnotationAction_1_0_0()); }
	()
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getExpressionVectorTypeAnnotationAction_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_0__1__Impl
	rule__ExpressionTypeAnnotated__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getLeftSquareBracketKeyword_1_0_1()); }
	'['
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getLeftSquareBracketKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_0__2__Impl
	rule__ExpressionTypeAnnotated__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0_2()); }
	(rule__ExpressionTypeAnnotated__Group_1_0_2__0)?
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getRightSquareBracketKeyword_1_0_3()); }
	']'
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getRightSquareBracketKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTypeAnnotated__Group_1_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_0_2__0__Impl
	rule__ExpressionTypeAnnotated__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsAssignment_1_0_2_0()); }
	(rule__ExpressionTypeAnnotated__ElementsAssignment_1_0_2_0)
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsAssignment_1_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0_2_1()); }
	(rule__ExpressionTypeAnnotated__Group_1_0_2_1__0)*
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTypeAnnotated__Group_1_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_0_2_1__0__Impl
	rule__ExpressionTypeAnnotated__Group_1_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getCommaKeyword_1_0_2_1_0()); }
	','
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getCommaKeyword_1_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsAssignment_1_0_2_1_1()); }
	(rule__ExpressionTypeAnnotated__ElementsAssignment_1_0_2_1_1)
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsAssignment_1_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTypeAnnotated__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_1__0__Impl
	rule__ExpressionTypeAnnotated__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getExpressionMapTypeAnnotationAction_1_1_0()); }
	()
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getExpressionMapTypeAnnotationAction_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_1__1__Impl
	rule__ExpressionTypeAnnotated__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getLeftCurlyBracketKeyword_1_1_1()); }
	'{'
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getLeftCurlyBracketKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_1__2__Impl
	rule__ExpressionTypeAnnotated__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1_2()); }
	(rule__ExpressionTypeAnnotated__Group_1_1_2__0)?
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getRightCurlyBracketKeyword_1_1_3()); }
	'}'
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getRightCurlyBracketKeyword_1_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTypeAnnotated__Group_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_1_2__0__Impl
	rule__ExpressionTypeAnnotated__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsAssignment_1_1_2_0()); }
	(rule__ExpressionTypeAnnotated__PairsAssignment_1_1_2_0)
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsAssignment_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1_2_1()); }
	(rule__ExpressionTypeAnnotated__Group_1_1_2_1__0)*
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionTypeAnnotated__Group_1_1_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_1_2_1__0__Impl
	rule__ExpressionTypeAnnotated__Group_1_1_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getCommaKeyword_1_1_2_1_0()); }
	','
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getCommaKeyword_1_1_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionTypeAnnotated__Group_1_1_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__Group_1_1_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsAssignment_1_1_2_1_1()); }
	(rule__ExpressionTypeAnnotated__PairsAssignment_1_1_2_1_1)
	{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsAssignment_1_1_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAnnotation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAnnotation__Group__0__Impl
	rule__TypeAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAnnotation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAnnotationAccess().getLessThanSignKeyword_0()); }
	'<'
	{ after(grammarAccess.getTypeAnnotationAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAnnotation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAnnotation__Group__1__Impl
	rule__TypeAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAnnotation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAnnotationAccess().getTypeAssignment_1()); }
	(rule__TypeAnnotation__TypeAssignment_1)
	{ after(grammarAccess.getTypeAnnotationAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAnnotation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAnnotation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAnnotationAccess().getGreaterThanSignKeyword_2()); }
	'>'
	{ after(grammarAccess.getTypeAnnotationAccess().getGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__0__Impl
	rule__Pair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getKeyAssignment_0()); }
	(rule__Pair__KeyAssignment_0)
	{ after(grammarAccess.getPairAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__1__Impl
	rule__Pair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
	'->'
	{ after(grammarAccess.getPairAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Pair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPairAccess().getValueAssignment_2()); }
	(rule__Pair__ValueAssignment_2)
	{ after(grammarAccess.getPairAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel2
		{ after(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel1__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel2
		{ after(grammarAccess.getExpressionLevel1Access().getRightExpressionLevel2ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel2__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel3
		{ after(grammarAccess.getExpressionLevel2Access().getRightExpressionLevel3ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel4
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel4
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_2_2_0()); }
		ruleExpressionLevel4
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel3__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_3_2_0()); }
		ruleExpressionLevel4
		{ after(grammarAccess.getExpressionLevel3Access().getRightExpressionLevel4ParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel5
		{ after(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel4__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel5
		{ after(grammarAccess.getExpressionLevel4Access().getRightExpressionLevel5ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_0_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_1_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_2_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_3_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel5__RightAssignment_1_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_4_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel5Access().getRightExpressionLevel6ParserRuleCall_1_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionLevel6__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionLevel6Access().getRightExpressionLevel6ParserRuleCall_1_2_0()); }
		ruleExpressionLevel6
		{ after(grammarAccess.getExpressionLevel6Access().getRightExpressionLevel6ParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionNot__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionNotAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
		ruleExpressionLevel8
		{ after(grammarAccess.getExpressionNotAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionMinus__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionMinusAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
		ruleExpressionLevel8
		{ after(grammarAccess.getExpressionMinusAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionPlus__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionPlusAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
		ruleExpressionLevel8
		{ after(grammarAccess.getExpressionPlusAccess().getSubExpressionLevel8ParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionBracket__SubAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionBracketAccess().getSubExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionBracketAccess().getSubExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionConstantBool__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConstantBoolAccess().getValueBOOL_LITERALTerminalRuleCall_0()); }
		RULE_BOOL_LITERAL
		{ after(grammarAccess.getExpressionConstantBoolAccess().getValueBOOL_LITERALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionConstantInt__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConstantIntAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getExpressionConstantIntAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionConstantString__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionConstantStringAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getExpressionConstantStringAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getExpressionVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__QuantifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionQuantifierAccess().getQuantifierQUANTIFIEREnumRuleCall_0_0()); }
		ruleQUANTIFIER
		{ after(grammarAccess.getExpressionQuantifierAccess().getQuantifierQUANTIFIEREnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__IteratorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionQuantifierAccess().getIteratorVariableParserRuleCall_2_0()); }
		ruleVariable
		{ after(grammarAccess.getExpressionQuantifierAccess().getIteratorVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__CollectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionQuantifierAccess().getCollectionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionQuantifierAccess().getCollectionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionQuantifier__ConditionAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionQuantifierAccess().getConditionExpressionParserRuleCall_6_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionQuantifierAccess().getConditionExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__ElementsAssignment_1_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsExpressionParserRuleCall_1_0_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsExpressionParserRuleCall_1_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__ElementsAssignment_1_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsExpressionParserRuleCall_1_0_2_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsExpressionParserRuleCall_1_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__PairsAssignment_1_1_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsPairParserRuleCall_1_1_2_0_0()); }
		rulePair
		{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsPairParserRuleCall_1_1_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionTypeAnnotated__PairsAssignment_1_1_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsPairParserRuleCall_1_1_2_1_1_0()); }
		rulePair
		{ after(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsPairParserRuleCall_1_1_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAnnotation__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAnnotationAccess().getTypeIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAnnotationAccess().getTypeIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPairAccess().getKeyExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getPairAccess().getKeyExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pair__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPairAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPairAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BOOL_LITERAL : ('true'|'false'|'TRUE'|'FALSE'|'True'|'False');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
