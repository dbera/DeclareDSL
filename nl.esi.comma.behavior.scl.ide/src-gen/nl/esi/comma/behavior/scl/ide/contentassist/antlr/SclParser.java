/*
 * generated by Xtext 2.25.0
 */
package nl.esi.comma.behavior.scl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import nl.esi.comma.behavior.scl.ide.contentassist.antlr.internal.InternalSclParser;
import nl.esi.comma.behavior.scl.services.SclGrammarAccess;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class SclParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(SclGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, SclGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getRefAccess().getAlternatives(), "rule__Ref__Alternatives");
			builder.put(grammarAccess.getTemplatesAccess().getTypeAlternatives_1_0(), "rule__Templates__TypeAlternatives_1_0");
			builder.put(grammarAccess.getPastAccess().getTypeAlternatives_1_0(), "rule__Past__TypeAlternatives_1_0");
			builder.put(grammarAccess.getFutureAccess().getTypeAlternatives_1_0(), "rule__Future__TypeAlternatives_1_0");
			builder.put(grammarAccess.getDependenciesAccess().getTypeAlternatives_1_0(), "rule__Dependencies__TypeAlternatives_1_0");
			builder.put(grammarAccess.getChoiceAccess().getTypeAlternatives_1_0(), "rule__Choice__TypeAlternatives_1_0");
			builder.put(grammarAccess.getExistentialAccess().getTypeAlternatives_1_0(), "rule__Existential__TypeAlternatives_1_0");
			builder.put(grammarAccess.getExpressionLevel1Access().getAlternatives_1(), "rule__ExpressionLevel1__Alternatives_1");
			builder.put(grammarAccess.getExpressionLevel1Access().getAlternatives_1_0_1(), "rule__ExpressionLevel1__Alternatives_1_0_1");
			builder.put(grammarAccess.getExpressionLevel1Access().getAlternatives_1_1_1(), "rule__ExpressionLevel1__Alternatives_1_1_1");
			builder.put(grammarAccess.getExpressionLevel2Access().getAlternatives_1(), "rule__ExpressionLevel2__Alternatives_1");
			builder.put(grammarAccess.getExpressionLevel3Access().getAlternatives_1(), "rule__ExpressionLevel3__Alternatives_1");
			builder.put(grammarAccess.getExpressionLevel4Access().getAlternatives_1(), "rule__ExpressionLevel4__Alternatives_1");
			builder.put(grammarAccess.getExpressionLevel5Access().getAlternatives_1(), "rule__ExpressionLevel5__Alternatives_1");
			builder.put(grammarAccess.getExpressionLevel7Access().getAlternatives(), "rule__ExpressionLevel7__Alternatives");
			builder.put(grammarAccess.getExpressionNotAccess().getAlternatives_0(), "rule__ExpressionNot__Alternatives_0");
			builder.put(grammarAccess.getExpressionLevel8Access().getAlternatives(), "rule__ExpressionLevel8__Alternatives");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getAlternatives_1(), "rule__ExpressionTypeAnnotated__Alternatives_1");
			builder.put(grammarAccess.getConcreteExpressionBinaryAccess().getAlternatives(), "rule__ConcreteExpressionBinary__Alternatives");
			builder.put(grammarAccess.getConcreteExpressionUnaryAccess().getAlternatives(), "rule__ConcreteExpressionUnary__Alternatives");
			builder.put(grammarAccess.getActionTypeAccess().getAlternatives(), "rule__ActionType__Alternatives");
			builder.put(grammarAccess.getQUANTIFIERAccess().getAlternatives(), "rule__QUANTIFIER__Alternatives");
			builder.put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
			builder.put(grammarAccess.getModelAccess().getGroup_5(), "rule__Model__Group_5__0");
			builder.put(grammarAccess.getCompositionAccess().getGroup(), "rule__Composition__Group__0");
			builder.put(grammarAccess.getCompositionAccess().getGroup_6(), "rule__Composition__Group_6__0");
			builder.put(grammarAccess.getCompositionAccess().getGroup_7(), "rule__Composition__Group_7__0");
			builder.put(grammarAccess.getCompositionAccess().getGroup_8(), "rule__Composition__Group_8__0");
			builder.put(grammarAccess.getSequenceDefAccess().getGroup(), "rule__SequenceDef__Group__0");
			builder.put(grammarAccess.getParamActAccess().getGroup(), "rule__ParamAct__Group__0");
			builder.put(grammarAccess.getParamActAccess().getGroup_1(), "rule__ParamAct__Group_1__0");
			builder.put(grammarAccess.getRefStepAccess().getGroup(), "rule__RefStep__Group__0");
			builder.put(grammarAccess.getRefStepAccess().getGroup_2(), "rule__RefStep__Group_2__0");
			builder.put(grammarAccess.getRefSequenceAccess().getGroup(), "rule__RefSequence__Group__0");
			builder.put(grammarAccess.getFeaturesAccess().getGroup(), "rule__Features__Group__0");
			builder.put(grammarAccess.getActionsAccess().getGroup(), "rule__Actions__Group__0");
			builder.put(grammarAccess.getActionParamAccess().getGroup(), "rule__ActionParam__Group__0");
			builder.put(grammarAccess.getActionParamAccess().getGroup_3(), "rule__ActionParam__Group_3__0");
			builder.put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
			builder.put(grammarAccess.getTemplatesAccess().getGroup(), "rule__Templates__Group__0");
			builder.put(grammarAccess.getTemplatesAccess().getGroup_2(), "rule__Templates__Group_2__0");
			builder.put(grammarAccess.getPastAccess().getGroup(), "rule__Past__Group__0");
			builder.put(grammarAccess.getFutureAccess().getGroup(), "rule__Future__Group__0");
			builder.put(grammarAccess.getDependenciesAccess().getGroup(), "rule__Dependencies__Group__0");
			builder.put(grammarAccess.getChoiceAccess().getGroup(), "rule__Choice__Group__0");
			builder.put(grammarAccess.getExistentialAccess().getGroup(), "rule__Existential__Group__0");
			builder.put(grammarAccess.getExclusiveChoiceAccess().getGroup(), "rule__ExclusiveChoice__Group__0");
			builder.put(grammarAccess.getSimpleChoiceAccess().getGroup(), "rule__SimpleChoice__Group__0");
			builder.put(grammarAccess.getNotChainSuccessionAccess().getGroup(), "rule__NotChainSuccession__Group__0");
			builder.put(grammarAccess.getNotCoExistanceAccess().getGroup(), "rule__NotCoExistance__Group__0");
			builder.put(grammarAccess.getNotSuccessionAccess().getGroup(), "rule__NotSuccession__Group__0");
			builder.put(grammarAccess.getChainSuccessionAccess().getGroup(), "rule__ChainSuccession__Group__0");
			builder.put(grammarAccess.getChainSuccessionAccess().getGroup_6(), "rule__ChainSuccession__Group_6__0");
			builder.put(grammarAccess.getChainSuccessionAccess().getGroup_6_2(), "rule__ChainSuccession__Group_6_2__0");
			builder.put(grammarAccess.getAlternateSuccessionAccess().getGroup(), "rule__AlternateSuccession__Group__0");
			builder.put(grammarAccess.getSuccessionAccess().getGroup(), "rule__Succession__Group__0");
			builder.put(grammarAccess.getSuccessionAccess().getGroup_7(), "rule__Succession__Group_7__0");
			builder.put(grammarAccess.getSuccessionAccess().getGroup_7_2(), "rule__Succession__Group_7_2__0");
			builder.put(grammarAccess.getCoExistanceAccess().getGroup(), "rule__CoExistance__Group__0");
			builder.put(grammarAccess.getRespondedExistenceAccess().getGroup(), "rule__RespondedExistence__Group__0");
			builder.put(grammarAccess.getChainPrecedenceAccess().getGroup(), "rule__ChainPrecedence__Group__0");
			builder.put(grammarAccess.getChainPrecedenceAccess().getGroup_11(), "rule__ChainPrecedence__Group_11__0");
			builder.put(grammarAccess.getChainPrecedenceAccess().getGroup_11_2(), "rule__ChainPrecedence__Group_11_2__0");
			builder.put(grammarAccess.getChainResponseAccess().getGroup(), "rule__ChainResponse__Group__0");
			builder.put(grammarAccess.getChainResponseAccess().getGroup_11(), "rule__ChainResponse__Group_11__0");
			builder.put(grammarAccess.getChainResponseAccess().getGroup_11_2(), "rule__ChainResponse__Group_11_2__0");
			builder.put(grammarAccess.getAlternateResponseAccess().getGroup(), "rule__AlternateResponse__Group__0");
			builder.put(grammarAccess.getAlternateResponseAccess().getGroup_9(), "rule__AlternateResponse__Group_9__0");
			builder.put(grammarAccess.getAlternateResponseAccess().getGroup_9_2(), "rule__AlternateResponse__Group_9_2__0");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getGroup(), "rule__AlternatePrecedence__Group__0");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getGroup_9(), "rule__AlternatePrecedence__Group_9__0");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getGroup_9_2(), "rule__AlternatePrecedence__Group_9_2__0");
			builder.put(grammarAccess.getResponseAccess().getGroup(), "rule__Response__Group__0");
			builder.put(grammarAccess.getResponseAccess().getGroup_11(), "rule__Response__Group_11__0");
			builder.put(grammarAccess.getResponseAccess().getGroup_11_2(), "rule__Response__Group_11_2__0");
			builder.put(grammarAccess.getPrecedenceAccess().getGroup(), "rule__Precedence__Group__0");
			builder.put(grammarAccess.getPrecedenceAccess().getGroup_11(), "rule__Precedence__Group_11__0");
			builder.put(grammarAccess.getPrecedenceAccess().getGroup_11_2(), "rule__Precedence__Group_11_2__0");
			builder.put(grammarAccess.getEndAccess().getGroup(), "rule__End__Group__0");
			builder.put(grammarAccess.getInitAccess().getGroup(), "rule__Init__Group__0");
			builder.put(grammarAccess.getAtMostAccess().getGroup(), "rule__AtMost__Group__0");
			builder.put(grammarAccess.getExactAccess().getGroup(), "rule__Exact__Group__0");
			builder.put(grammarAccess.getExactAccess().getGroup_5(), "rule__Exact__Group_5__0");
			builder.put(grammarAccess.getExactAccess().getGroup_5_2(), "rule__Exact__Group_5_2__0");
			builder.put(grammarAccess.getAtLeastAccess().getGroup(), "rule__AtLeast__Group__0");
			builder.put(grammarAccess.getAtLeastAccess().getGroup_4(), "rule__AtLeast__Group_4__0");
			builder.put(grammarAccess.getAtLeastAccess().getGroup_4_2(), "rule__AtLeast__Group_4_2__0");
			builder.put(grammarAccess.getExpressionLevel1Access().getGroup(), "rule__ExpressionLevel1__Group__0");
			builder.put(grammarAccess.getExpressionLevel1Access().getGroup_1_0(), "rule__ExpressionLevel1__Group_1_0__0");
			builder.put(grammarAccess.getExpressionLevel1Access().getGroup_1_1(), "rule__ExpressionLevel1__Group_1_1__0");
			builder.put(grammarAccess.getExpressionLevel2Access().getGroup(), "rule__ExpressionLevel2__Group__0");
			builder.put(grammarAccess.getExpressionLevel2Access().getGroup_1_0(), "rule__ExpressionLevel2__Group_1_0__0");
			builder.put(grammarAccess.getExpressionLevel2Access().getGroup_1_1(), "rule__ExpressionLevel2__Group_1_1__0");
			builder.put(grammarAccess.getExpressionLevel3Access().getGroup(), "rule__ExpressionLevel3__Group__0");
			builder.put(grammarAccess.getExpressionLevel3Access().getGroup_1_0(), "rule__ExpressionLevel3__Group_1_0__0");
			builder.put(grammarAccess.getExpressionLevel3Access().getGroup_1_1(), "rule__ExpressionLevel3__Group_1_1__0");
			builder.put(grammarAccess.getExpressionLevel3Access().getGroup_1_2(), "rule__ExpressionLevel3__Group_1_2__0");
			builder.put(grammarAccess.getExpressionLevel3Access().getGroup_1_3(), "rule__ExpressionLevel3__Group_1_3__0");
			builder.put(grammarAccess.getExpressionLevel4Access().getGroup(), "rule__ExpressionLevel4__Group__0");
			builder.put(grammarAccess.getExpressionLevel4Access().getGroup_1_0(), "rule__ExpressionLevel4__Group_1_0__0");
			builder.put(grammarAccess.getExpressionLevel4Access().getGroup_1_1(), "rule__ExpressionLevel4__Group_1_1__0");
			builder.put(grammarAccess.getExpressionLevel5Access().getGroup(), "rule__ExpressionLevel5__Group__0");
			builder.put(grammarAccess.getExpressionLevel5Access().getGroup_1_0(), "rule__ExpressionLevel5__Group_1_0__0");
			builder.put(grammarAccess.getExpressionLevel5Access().getGroup_1_1(), "rule__ExpressionLevel5__Group_1_1__0");
			builder.put(grammarAccess.getExpressionLevel5Access().getGroup_1_2(), "rule__ExpressionLevel5__Group_1_2__0");
			builder.put(grammarAccess.getExpressionLevel5Access().getGroup_1_3(), "rule__ExpressionLevel5__Group_1_3__0");
			builder.put(grammarAccess.getExpressionLevel5Access().getGroup_1_4(), "rule__ExpressionLevel5__Group_1_4__0");
			builder.put(grammarAccess.getExpressionLevel6Access().getGroup(), "rule__ExpressionLevel6__Group__0");
			builder.put(grammarAccess.getExpressionLevel6Access().getGroup_1(), "rule__ExpressionLevel6__Group_1__0");
			builder.put(grammarAccess.getExpressionNotAccess().getGroup(), "rule__ExpressionNot__Group__0");
			builder.put(grammarAccess.getExpressionMinusAccess().getGroup(), "rule__ExpressionMinus__Group__0");
			builder.put(grammarAccess.getExpressionPlusAccess().getGroup(), "rule__ExpressionPlus__Group__0");
			builder.put(grammarAccess.getExpressionBracketAccess().getGroup(), "rule__ExpressionBracket__Group__0");
			builder.put(grammarAccess.getExpressionEnumLiteralAccess().getGroup(), "rule__ExpressionEnumLiteral__Group__0");
			builder.put(grammarAccess.getExpressionAnyAccess().getGroup(), "rule__ExpressionAny__Group__0");
			builder.put(grammarAccess.getExpressionFunctionCallAccess().getGroup(), "rule__ExpressionFunctionCall__Group__0");
			builder.put(grammarAccess.getExpressionFunctionCallAccess().getGroup_2(), "rule__ExpressionFunctionCall__Group_2__0");
			builder.put(grammarAccess.getExpressionFunctionCallAccess().getGroup_2_1(), "rule__ExpressionFunctionCall__Group_2_1__0");
			builder.put(grammarAccess.getExpressionQuantifierAccess().getGroup(), "rule__ExpressionQuantifier__Group__0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup(), "rule__ExpressionTypeAnnotated__Group__0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0(), "rule__ExpressionTypeAnnotated__Group_1_0__0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0_2(), "rule__ExpressionTypeAnnotated__Group_1_0_2__0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_0_2_1(), "rule__ExpressionTypeAnnotated__Group_1_0_2_1__0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1(), "rule__ExpressionTypeAnnotated__Group_1_1__0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1_2(), "rule__ExpressionTypeAnnotated__Group_1_1_2__0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getGroup_1_1_2_1(), "rule__ExpressionTypeAnnotated__Group_1_1_2_1__0");
			builder.put(grammarAccess.getTypeAnnotationAccess().getGroup(), "rule__TypeAnnotation__Group__0");
			builder.put(grammarAccess.getPairAccess().getGroup(), "rule__Pair__Group__0");
			builder.put(grammarAccess.getModelAccess().getFeaturesAssignment_0(), "rule__Model__FeaturesAssignment_0");
			builder.put(grammarAccess.getModelAccess().getActionsAssignment_1(), "rule__Model__ActionsAssignment_1");
			builder.put(grammarAccess.getModelAccess().getSequencesAssignment_2(), "rule__Model__SequencesAssignment_2");
			builder.put(grammarAccess.getModelAccess().getCompositionAssignment_4(), "rule__Model__CompositionAssignment_4");
			builder.put(grammarAccess.getModelAccess().getCommonFeaturesAssignment_5_1(), "rule__Model__CommonFeaturesAssignment_5_1");
			builder.put(grammarAccess.getModelAccess().getTemplatesAssignment_6(), "rule__Model__TemplatesAssignment_6");
			builder.put(grammarAccess.getModelAccess().getUseLabelsAssignment_7(), "rule__Model__UseLabelsAssignment_7");
			builder.put(grammarAccess.getCompositionAccess().getNameAssignment_1(), "rule__Composition__NameAssignment_1");
			builder.put(grammarAccess.getCompositionAccess().getTemplatesAssignment_4(), "rule__Composition__TemplatesAssignment_4");
			builder.put(grammarAccess.getCompositionAccess().getDescTxtAssignment_6_1(), "rule__Composition__DescTxtAssignment_6_1");
			builder.put(grammarAccess.getCompositionAccess().getCommonFeaturesAssignment_7_1(), "rule__Composition__CommonFeaturesAssignment_7_1");
			builder.put(grammarAccess.getCompositionAccess().getTagStrAssignment_8_1(), "rule__Composition__TagStrAssignment_8_1");
			builder.put(grammarAccess.getSequenceDefAccess().getNameAssignment_1(), "rule__SequenceDef__NameAssignment_1");
			builder.put(grammarAccess.getSequenceDefAccess().getActListAssignment_3(), "rule__SequenceDef__ActListAssignment_3");
			builder.put(grammarAccess.getParamActAccess().getActAssignment_0(), "rule__ParamAct__ActAssignment_0");
			builder.put(grammarAccess.getParamActAccess().getIdxAssignment_1_1(), "rule__ParamAct__IdxAssignment_1_1");
			builder.put(grammarAccess.getRefStepAccess().getStepAssignment_1(), "rule__RefStep__StepAssignment_1");
			builder.put(grammarAccess.getRefStepAccess().getIdxAssignment_2_1(), "rule__RefStep__IdxAssignment_2_1");
			builder.put(grammarAccess.getRefSequenceAccess().getSeqAssignment_1(), "rule__RefSequence__SeqAssignment_1");
			builder.put(grammarAccess.getFeaturesAccess().getFeatureAssignment_2(), "rule__Features__FeatureAssignment_2");
			builder.put(grammarAccess.getFeatureAccess().getNameAssignment(), "rule__Feature__NameAssignment");
			builder.put(grammarAccess.getActionsAccess().getActAssignment_2(), "rule__Actions__ActAssignment_2");
			builder.put(grammarAccess.getActionParamAccess().getParametersAssignment_2(), "rule__ActionParam__ParametersAssignment_2");
			builder.put(grammarAccess.getActionParamAccess().getParametersAssignment_3_1(), "rule__ActionParam__ParametersAssignment_3_1");
			builder.put(grammarAccess.getActionAccess().getActAssignment_0(), "rule__Action__ActAssignment_0");
			builder.put(grammarAccess.getActionAccess().getNameAssignment_1(), "rule__Action__NameAssignment_1");
			builder.put(grammarAccess.getActionAccess().getLabelAssignment_2(), "rule__Action__LabelAssignment_2");
			builder.put(grammarAccess.getActionAccess().getActParamAssignment_3(), "rule__Action__ActParamAssignment_3");
			builder.put(grammarAccess.getTemplatesAccess().getNameAssignment_0(), "rule__Templates__NameAssignment_0");
			builder.put(grammarAccess.getTemplatesAccess().getTypeAssignment_1(), "rule__Templates__TypeAssignment_1");
			builder.put(grammarAccess.getTemplatesAccess().getFeaturesAssignment_2_1(), "rule__Templates__FeaturesAssignment_2_1");
			builder.put(grammarAccess.getPastAccess().getTypeAssignment_1(), "rule__Past__TypeAssignment_1");
			builder.put(grammarAccess.getFutureAccess().getTypeAssignment_1(), "rule__Future__TypeAssignment_1");
			builder.put(grammarAccess.getDependenciesAccess().getTypeAssignment_1(), "rule__Dependencies__TypeAssignment_1");
			builder.put(grammarAccess.getChoiceAccess().getTypeAssignment_1(), "rule__Choice__TypeAssignment_1");
			builder.put(grammarAccess.getExistentialAccess().getTypeAssignment_1(), "rule__Existential__TypeAssignment_1");
			builder.put(grammarAccess.getExclusiveChoiceAccess().getEitherAAssignment_0(), "rule__ExclusiveChoice__EitherAAssignment_0");
			builder.put(grammarAccess.getExclusiveChoiceAccess().getRefAAssignment_1(), "rule__ExclusiveChoice__RefAAssignment_1");
			builder.put(grammarAccess.getExclusiveChoiceAccess().getEitherBAssignment_3(), "rule__ExclusiveChoice__EitherBAssignment_3");
			builder.put(grammarAccess.getExclusiveChoiceAccess().getRefBAssignment_4(), "rule__ExclusiveChoice__RefBAssignment_4");
			builder.put(grammarAccess.getSimpleChoiceAccess().getRefAAssignment_0(), "rule__SimpleChoice__RefAAssignment_0");
			builder.put(grammarAccess.getNotChainSuccessionAccess().getEitherAAssignment_1(), "rule__NotChainSuccession__EitherAAssignment_1");
			builder.put(grammarAccess.getNotChainSuccessionAccess().getRefAAssignment_2(), "rule__NotChainSuccession__RefAAssignment_2");
			builder.put(grammarAccess.getNotChainSuccessionAccess().getEitherBAssignment_5(), "rule__NotChainSuccession__EitherBAssignment_5");
			builder.put(grammarAccess.getNotChainSuccessionAccess().getRefBAssignment_6(), "rule__NotChainSuccession__RefBAssignment_6");
			builder.put(grammarAccess.getNotCoExistanceAccess().getRefAAssignment_1(), "rule__NotCoExistance__RefAAssignment_1");
			builder.put(grammarAccess.getNotSuccessionAccess().getEitherAAssignment_1(), "rule__NotSuccession__EitherAAssignment_1");
			builder.put(grammarAccess.getNotSuccessionAccess().getRefAAssignment_2(), "rule__NotSuccession__RefAAssignment_2");
			builder.put(grammarAccess.getNotSuccessionAccess().getEitherBAssignment_5(), "rule__NotSuccession__EitherBAssignment_5");
			builder.put(grammarAccess.getNotSuccessionAccess().getRefBAssignment_6(), "rule__NotSuccession__RefBAssignment_6");
			builder.put(grammarAccess.getChainSuccessionAccess().getEitherAAssignment_1(), "rule__ChainSuccession__EitherAAssignment_1");
			builder.put(grammarAccess.getChainSuccessionAccess().getRefAAssignment_2(), "rule__ChainSuccession__RefAAssignment_2");
			builder.put(grammarAccess.getChainSuccessionAccess().getEitherBAssignment_4(), "rule__ChainSuccession__EitherBAssignment_4");
			builder.put(grammarAccess.getChainSuccessionAccess().getRefBAssignment_5(), "rule__ChainSuccession__RefBAssignment_5");
			builder.put(grammarAccess.getChainSuccessionAccess().getMinValAssignment_6_1(), "rule__ChainSuccession__MinValAssignment_6_1");
			builder.put(grammarAccess.getChainSuccessionAccess().getMaxValAssignment_6_2_1(), "rule__ChainSuccession__MaxValAssignment_6_2_1");
			builder.put(grammarAccess.getAlternateSuccessionAccess().getEitherAAssignment_1(), "rule__AlternateSuccession__EitherAAssignment_1");
			builder.put(grammarAccess.getAlternateSuccessionAccess().getRefAAssignment_2(), "rule__AlternateSuccession__RefAAssignment_2");
			builder.put(grammarAccess.getAlternateSuccessionAccess().getEitherBAssignment_5(), "rule__AlternateSuccession__EitherBAssignment_5");
			builder.put(grammarAccess.getAlternateSuccessionAccess().getRefBAssignment_6(), "rule__AlternateSuccession__RefBAssignment_6");
			builder.put(grammarAccess.getAlternateSuccessionAccess().getEitherCAssignment_8(), "rule__AlternateSuccession__EitherCAssignment_8");
			builder.put(grammarAccess.getAlternateSuccessionAccess().getNegationAssignment_9(), "rule__AlternateSuccession__NegationAssignment_9");
			builder.put(grammarAccess.getAlternateSuccessionAccess().getRefCAssignment_10(), "rule__AlternateSuccession__RefCAssignment_10");
			builder.put(grammarAccess.getSuccessionAccess().getEitherAAssignment_1(), "rule__Succession__EitherAAssignment_1");
			builder.put(grammarAccess.getSuccessionAccess().getRefAAssignment_2(), "rule__Succession__RefAAssignment_2");
			builder.put(grammarAccess.getSuccessionAccess().getEitherBAssignment_5(), "rule__Succession__EitherBAssignment_5");
			builder.put(grammarAccess.getSuccessionAccess().getRefBAssignment_6(), "rule__Succession__RefBAssignment_6");
			builder.put(grammarAccess.getSuccessionAccess().getMinValAssignment_7_1(), "rule__Succession__MinValAssignment_7_1");
			builder.put(grammarAccess.getSuccessionAccess().getMaxValAssignment_7_2_1(), "rule__Succession__MaxValAssignment_7_2_1");
			builder.put(grammarAccess.getCoExistanceAccess().getRefAAssignment_1(), "rule__CoExistance__RefAAssignment_1");
			builder.put(grammarAccess.getRespondedExistenceAccess().getEitherAAssignment_2(), "rule__RespondedExistence__EitherAAssignment_2");
			builder.put(grammarAccess.getRespondedExistenceAccess().getRefAAssignment_3(), "rule__RespondedExistence__RefAAssignment_3");
			builder.put(grammarAccess.getRespondedExistenceAccess().getEitherBAssignment_6(), "rule__RespondedExistence__EitherBAssignment_6");
			builder.put(grammarAccess.getRespondedExistenceAccess().getRefBAssignment_7(), "rule__RespondedExistence__RefBAssignment_7");
			builder.put(grammarAccess.getChainPrecedenceAccess().getEitherBAssignment_2(), "rule__ChainPrecedence__EitherBAssignment_2");
			builder.put(grammarAccess.getChainPrecedenceAccess().getRefBAssignment_3(), "rule__ChainPrecedence__RefBAssignment_3");
			builder.put(grammarAccess.getChainPrecedenceAccess().getEitherAAssignment_6(), "rule__ChainPrecedence__EitherAAssignment_6");
			builder.put(grammarAccess.getChainPrecedenceAccess().getRefAAssignment_7(), "rule__ChainPrecedence__RefAAssignment_7");
			builder.put(grammarAccess.getChainPrecedenceAccess().getNotAssignment_9(), "rule__ChainPrecedence__NotAssignment_9");
			builder.put(grammarAccess.getChainPrecedenceAccess().getMinValAssignment_11_1(), "rule__ChainPrecedence__MinValAssignment_11_1");
			builder.put(grammarAccess.getChainPrecedenceAccess().getMaxValAssignment_11_2_1(), "rule__ChainPrecedence__MaxValAssignment_11_2_1");
			builder.put(grammarAccess.getChainResponseAccess().getEitherAAssignment_2(), "rule__ChainResponse__EitherAAssignment_2");
			builder.put(grammarAccess.getChainResponseAccess().getRefAAssignment_3(), "rule__ChainResponse__RefAAssignment_3");
			builder.put(grammarAccess.getChainResponseAccess().getEitherBAssignment_6(), "rule__ChainResponse__EitherBAssignment_6");
			builder.put(grammarAccess.getChainResponseAccess().getRefBAssignment_7(), "rule__ChainResponse__RefBAssignment_7");
			builder.put(grammarAccess.getChainResponseAccess().getNotAssignment_9(), "rule__ChainResponse__NotAssignment_9");
			builder.put(grammarAccess.getChainResponseAccess().getMinValAssignment_11_1(), "rule__ChainResponse__MinValAssignment_11_1");
			builder.put(grammarAccess.getChainResponseAccess().getMaxValAssignment_11_2_1(), "rule__ChainResponse__MaxValAssignment_11_2_1");
			builder.put(grammarAccess.getAlternateResponseAccess().getEitherAAssignment_2(), "rule__AlternateResponse__EitherAAssignment_2");
			builder.put(grammarAccess.getAlternateResponseAccess().getRefAAssignment_3(), "rule__AlternateResponse__RefAAssignment_3");
			builder.put(grammarAccess.getAlternateResponseAccess().getEitherBAssignment_6(), "rule__AlternateResponse__EitherBAssignment_6");
			builder.put(grammarAccess.getAlternateResponseAccess().getRefBAssignment_7(), "rule__AlternateResponse__RefBAssignment_7");
			builder.put(grammarAccess.getAlternateResponseAccess().getMinValAssignment_9_1(), "rule__AlternateResponse__MinValAssignment_9_1");
			builder.put(grammarAccess.getAlternateResponseAccess().getMaxValAssignment_9_2_1(), "rule__AlternateResponse__MaxValAssignment_9_2_1");
			builder.put(grammarAccess.getAlternateResponseAccess().getNotAssignment_11(), "rule__AlternateResponse__NotAssignment_11");
			builder.put(grammarAccess.getAlternateResponseAccess().getEitherCAssignment_12(), "rule__AlternateResponse__EitherCAssignment_12");
			builder.put(grammarAccess.getAlternateResponseAccess().getRefCAssignment_13(), "rule__AlternateResponse__RefCAssignment_13");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getEitherBAssignment_2(), "rule__AlternatePrecedence__EitherBAssignment_2");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getRefBAssignment_3(), "rule__AlternatePrecedence__RefBAssignment_3");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getEitherAAssignment_6(), "rule__AlternatePrecedence__EitherAAssignment_6");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getRefAAssignment_7(), "rule__AlternatePrecedence__RefAAssignment_7");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getMinValAssignment_9_1(), "rule__AlternatePrecedence__MinValAssignment_9_1");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getMaxValAssignment_9_2_1(), "rule__AlternatePrecedence__MaxValAssignment_9_2_1");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getNotAssignment_11(), "rule__AlternatePrecedence__NotAssignment_11");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getEitherCAssignment_12(), "rule__AlternatePrecedence__EitherCAssignment_12");
			builder.put(grammarAccess.getAlternatePrecedenceAccess().getRefCAssignment_13(), "rule__AlternatePrecedence__RefCAssignment_13");
			builder.put(grammarAccess.getResponseAccess().getEitherAAssignment_2(), "rule__Response__EitherAAssignment_2");
			builder.put(grammarAccess.getResponseAccess().getRefAAssignment_3(), "rule__Response__RefAAssignment_3");
			builder.put(grammarAccess.getResponseAccess().getEitherBAssignment_6(), "rule__Response__EitherBAssignment_6");
			builder.put(grammarAccess.getResponseAccess().getRefBAssignment_7(), "rule__Response__RefBAssignment_7");
			builder.put(grammarAccess.getResponseAccess().getNotAssignment_9(), "rule__Response__NotAssignment_9");
			builder.put(grammarAccess.getResponseAccess().getMinValAssignment_11_1(), "rule__Response__MinValAssignment_11_1");
			builder.put(grammarAccess.getResponseAccess().getMaxValAssignment_11_2_1(), "rule__Response__MaxValAssignment_11_2_1");
			builder.put(grammarAccess.getPrecedenceAccess().getEitherBAssignment_2(), "rule__Precedence__EitherBAssignment_2");
			builder.put(grammarAccess.getPrecedenceAccess().getRefBAssignment_3(), "rule__Precedence__RefBAssignment_3");
			builder.put(grammarAccess.getPrecedenceAccess().getEitherAAssignment_6(), "rule__Precedence__EitherAAssignment_6");
			builder.put(grammarAccess.getPrecedenceAccess().getRefAAssignment_7(), "rule__Precedence__RefAAssignment_7");
			builder.put(grammarAccess.getPrecedenceAccess().getNotAssignment_9(), "rule__Precedence__NotAssignment_9");
			builder.put(grammarAccess.getPrecedenceAccess().getMinValAssignment_11_1(), "rule__Precedence__MinValAssignment_11_1");
			builder.put(grammarAccess.getPrecedenceAccess().getMaxValAssignment_11_2_1(), "rule__Precedence__MaxValAssignment_11_2_1");
			builder.put(grammarAccess.getEndAccess().getRefAssignment_0(), "rule__End__RefAssignment_0");
			builder.put(grammarAccess.getInitAccess().getRefAssignment_0(), "rule__Init__RefAssignment_0");
			builder.put(grammarAccess.getAtMostAccess().getRefAssignment_0(), "rule__AtMost__RefAssignment_0");
			builder.put(grammarAccess.getAtMostAccess().getNumAssignment_2(), "rule__AtMost__NumAssignment_2");
			builder.put(grammarAccess.getExactAccess().getRefAssignment_0(), "rule__Exact__RefAssignment_0");
			builder.put(grammarAccess.getExactAccess().getNumAssignment_2(), "rule__Exact__NumAssignment_2");
			builder.put(grammarAccess.getExactAccess().getConsecutivelyAssignment_4(), "rule__Exact__ConsecutivelyAssignment_4");
			builder.put(grammarAccess.getExactAccess().getMinValAssignment_5_1(), "rule__Exact__MinValAssignment_5_1");
			builder.put(grammarAccess.getExactAccess().getMaxValAssignment_5_2_1(), "rule__Exact__MaxValAssignment_5_2_1");
			builder.put(grammarAccess.getAtLeastAccess().getRefAssignment_0(), "rule__AtLeast__RefAssignment_0");
			builder.put(grammarAccess.getAtLeastAccess().getNumAssignment_2(), "rule__AtLeast__NumAssignment_2");
			builder.put(grammarAccess.getAtLeastAccess().getMinValAssignment_4_1(), "rule__AtLeast__MinValAssignment_4_1");
			builder.put(grammarAccess.getAtLeastAccess().getMaxValAssignment_4_2_1(), "rule__AtLeast__MaxValAssignment_4_2_1");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment(), "rule__Variable__NameAssignment");
			builder.put(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_0_2(), "rule__ExpressionLevel1__RightAssignment_1_0_2");
			builder.put(grammarAccess.getExpressionLevel1Access().getRightAssignment_1_1_2(), "rule__ExpressionLevel1__RightAssignment_1_1_2");
			builder.put(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_0_2(), "rule__ExpressionLevel2__RightAssignment_1_0_2");
			builder.put(grammarAccess.getExpressionLevel2Access().getRightAssignment_1_1_2(), "rule__ExpressionLevel2__RightAssignment_1_1_2");
			builder.put(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_0_2(), "rule__ExpressionLevel3__RightAssignment_1_0_2");
			builder.put(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_1_2(), "rule__ExpressionLevel3__RightAssignment_1_1_2");
			builder.put(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_2_2(), "rule__ExpressionLevel3__RightAssignment_1_2_2");
			builder.put(grammarAccess.getExpressionLevel3Access().getRightAssignment_1_3_2(), "rule__ExpressionLevel3__RightAssignment_1_3_2");
			builder.put(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_0_2(), "rule__ExpressionLevel4__RightAssignment_1_0_2");
			builder.put(grammarAccess.getExpressionLevel4Access().getRightAssignment_1_1_2(), "rule__ExpressionLevel4__RightAssignment_1_1_2");
			builder.put(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_0_2(), "rule__ExpressionLevel5__RightAssignment_1_0_2");
			builder.put(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_1_2(), "rule__ExpressionLevel5__RightAssignment_1_1_2");
			builder.put(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_2_2(), "rule__ExpressionLevel5__RightAssignment_1_2_2");
			builder.put(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_3_2(), "rule__ExpressionLevel5__RightAssignment_1_3_2");
			builder.put(grammarAccess.getExpressionLevel5Access().getRightAssignment_1_4_2(), "rule__ExpressionLevel5__RightAssignment_1_4_2");
			builder.put(grammarAccess.getExpressionLevel6Access().getRightAssignment_1_2(), "rule__ExpressionLevel6__RightAssignment_1_2");
			builder.put(grammarAccess.getExpressionNotAccess().getSubAssignment_1(), "rule__ExpressionNot__SubAssignment_1");
			builder.put(grammarAccess.getExpressionMinusAccess().getSubAssignment_1(), "rule__ExpressionMinus__SubAssignment_1");
			builder.put(grammarAccess.getExpressionPlusAccess().getSubAssignment_1(), "rule__ExpressionPlus__SubAssignment_1");
			builder.put(grammarAccess.getExpressionBracketAccess().getSubAssignment_1(), "rule__ExpressionBracket__SubAssignment_1");
			builder.put(grammarAccess.getExpressionConstantBoolAccess().getValueAssignment(), "rule__ExpressionConstantBool__ValueAssignment");
			builder.put(grammarAccess.getExpressionConstantIntAccess().getValueAssignment(), "rule__ExpressionConstantInt__ValueAssignment");
			builder.put(grammarAccess.getExpressionConstantStringAccess().getValueAssignment(), "rule__ExpressionConstantString__ValueAssignment");
			builder.put(grammarAccess.getExpressionEnumLiteralAccess().getTypeAssignment_0(), "rule__ExpressionEnumLiteral__TypeAssignment_0");
			builder.put(grammarAccess.getExpressionEnumLiteralAccess().getLiteralAssignment_2(), "rule__ExpressionEnumLiteral__LiteralAssignment_2");
			builder.put(grammarAccess.getExpressionVariableAccess().getNameAssignment(), "rule__ExpressionVariable__NameAssignment");
			builder.put(grammarAccess.getExpressionFunctionCallAccess().getFunctionNameAssignment_0(), "rule__ExpressionFunctionCall__FunctionNameAssignment_0");
			builder.put(grammarAccess.getExpressionFunctionCallAccess().getArgsAssignment_2_0(), "rule__ExpressionFunctionCall__ArgsAssignment_2_0");
			builder.put(grammarAccess.getExpressionFunctionCallAccess().getArgsAssignment_2_1_1(), "rule__ExpressionFunctionCall__ArgsAssignment_2_1_1");
			builder.put(grammarAccess.getExpressionQuantifierAccess().getQuantifierAssignment_0(), "rule__ExpressionQuantifier__QuantifierAssignment_0");
			builder.put(grammarAccess.getExpressionQuantifierAccess().getIteratorAssignment_2(), "rule__ExpressionQuantifier__IteratorAssignment_2");
			builder.put(grammarAccess.getExpressionQuantifierAccess().getCollectionAssignment_4(), "rule__ExpressionQuantifier__CollectionAssignment_4");
			builder.put(grammarAccess.getExpressionQuantifierAccess().getConditionAssignment_6(), "rule__ExpressionQuantifier__ConditionAssignment_6");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsAssignment_1_0_2_0(), "rule__ExpressionTypeAnnotated__ElementsAssignment_1_0_2_0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getElementsAssignment_1_0_2_1_1(), "rule__ExpressionTypeAnnotated__ElementsAssignment_1_0_2_1_1");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsAssignment_1_1_2_0(), "rule__ExpressionTypeAnnotated__PairsAssignment_1_1_2_0");
			builder.put(grammarAccess.getExpressionTypeAnnotatedAccess().getPairsAssignment_1_1_2_1_1(), "rule__ExpressionTypeAnnotated__PairsAssignment_1_1_2_1_1");
			builder.put(grammarAccess.getTypeAnnotationAccess().getTypeAssignment_1(), "rule__TypeAnnotation__TypeAssignment_1");
			builder.put(grammarAccess.getPairAccess().getKeyAssignment_0(), "rule__Pair__KeyAssignment_0");
			builder.put(grammarAccess.getPairAccess().getValueAssignment_2(), "rule__Pair__ValueAssignment_2");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private SclGrammarAccess grammarAccess;

	@Override
	protected InternalSclParser createParser() {
		InternalSclParser result = new InternalSclParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SclGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SclGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
