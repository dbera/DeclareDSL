/**
 * generated by Xtext 2.25.0
 */
package nl.esi.comma.expressions.expressions;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see nl.esi.comma.expressions.expressions.ExpressionsPackage
 * @generated
 */
public interface ExpressionsFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ExpressionsFactory eINSTANCE = nl.esi.comma.expressions.expressions.impl.ExpressionsFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable</em>'.
   * @generated
   */
  Variable createVariable();

  /**
   * Returns a new object of class '<em>Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression</em>'.
   * @generated
   */
  Expression createExpression();

  /**
   * Returns a new object of class '<em>Expression Not</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Not</em>'.
   * @generated
   */
  ExpressionNot createExpressionNot();

  /**
   * Returns a new object of class '<em>Expression Minus</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Minus</em>'.
   * @generated
   */
  ExpressionMinus createExpressionMinus();

  /**
   * Returns a new object of class '<em>Expression Plus</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Plus</em>'.
   * @generated
   */
  ExpressionPlus createExpressionPlus();

  /**
   * Returns a new object of class '<em>Expression Bracket</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Bracket</em>'.
   * @generated
   */
  ExpressionBracket createExpressionBracket();

  /**
   * Returns a new object of class '<em>Expression Constant Bool</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Constant Bool</em>'.
   * @generated
   */
  ExpressionConstantBool createExpressionConstantBool();

  /**
   * Returns a new object of class '<em>Expression Constant Int</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Constant Int</em>'.
   * @generated
   */
  ExpressionConstantInt createExpressionConstantInt();

  /**
   * Returns a new object of class '<em>Expression Constant String</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Constant String</em>'.
   * @generated
   */
  ExpressionConstantString createExpressionConstantString();

  /**
   * Returns a new object of class '<em>Expression Enum Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Enum Literal</em>'.
   * @generated
   */
  ExpressionEnumLiteral createExpressionEnumLiteral();

  /**
   * Returns a new object of class '<em>Expression Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Variable</em>'.
   * @generated
   */
  ExpressionVariable createExpressionVariable();

  /**
   * Returns a new object of class '<em>Expression Any</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Any</em>'.
   * @generated
   */
  ExpressionAny createExpressionAny();

  /**
   * Returns a new object of class '<em>Expression Function Call</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Function Call</em>'.
   * @generated
   */
  ExpressionFunctionCall createExpressionFunctionCall();

  /**
   * Returns a new object of class '<em>Expression Quantifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Quantifier</em>'.
   * @generated
   */
  ExpressionQuantifier createExpressionQuantifier();

  /**
   * Returns a new object of class '<em>Type Annotation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Type Annotation</em>'.
   * @generated
   */
  TypeAnnotation createTypeAnnotation();

  /**
   * Returns a new object of class '<em>Pair</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Pair</em>'.
   * @generated
   */
  Pair createPair();

  /**
   * Returns a new object of class '<em>Expression Binary</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Binary</em>'.
   * @generated
   */
  ExpressionBinary createExpressionBinary();

  /**
   * Returns a new object of class '<em>Expression Unary</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Unary</em>'.
   * @generated
   */
  ExpressionUnary createExpressionUnary();

  /**
   * Returns a new object of class '<em>Expression And</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression And</em>'.
   * @generated
   */
  ExpressionAnd createExpressionAnd();

  /**
   * Returns a new object of class '<em>Expression Or</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Or</em>'.
   * @generated
   */
  ExpressionOr createExpressionOr();

  /**
   * Returns a new object of class '<em>Expression Equal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Equal</em>'.
   * @generated
   */
  ExpressionEqual createExpressionEqual();

  /**
   * Returns a new object of class '<em>Expression NEqual</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression NEqual</em>'.
   * @generated
   */
  ExpressionNEqual createExpressionNEqual();

  /**
   * Returns a new object of class '<em>Expression Geq</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Geq</em>'.
   * @generated
   */
  ExpressionGeq createExpressionGeq();

  /**
   * Returns a new object of class '<em>Expression Greater</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Greater</em>'.
   * @generated
   */
  ExpressionGreater createExpressionGreater();

  /**
   * Returns a new object of class '<em>Expression Leq</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Leq</em>'.
   * @generated
   */
  ExpressionLeq createExpressionLeq();

  /**
   * Returns a new object of class '<em>Expression Less</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Less</em>'.
   * @generated
   */
  ExpressionLess createExpressionLess();

  /**
   * Returns a new object of class '<em>Expression Addition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Addition</em>'.
   * @generated
   */
  ExpressionAddition createExpressionAddition();

  /**
   * Returns a new object of class '<em>Expression Subtraction</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Subtraction</em>'.
   * @generated
   */
  ExpressionSubtraction createExpressionSubtraction();

  /**
   * Returns a new object of class '<em>Expression Multiply</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Multiply</em>'.
   * @generated
   */
  ExpressionMultiply createExpressionMultiply();

  /**
   * Returns a new object of class '<em>Expression Division</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Division</em>'.
   * @generated
   */
  ExpressionDivision createExpressionDivision();

  /**
   * Returns a new object of class '<em>Expression Maximum</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Maximum</em>'.
   * @generated
   */
  ExpressionMaximum createExpressionMaximum();

  /**
   * Returns a new object of class '<em>Expression Minimum</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Minimum</em>'.
   * @generated
   */
  ExpressionMinimum createExpressionMinimum();

  /**
   * Returns a new object of class '<em>Expression Modulo</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Modulo</em>'.
   * @generated
   */
  ExpressionModulo createExpressionModulo();

  /**
   * Returns a new object of class '<em>Expression Power</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Power</em>'.
   * @generated
   */
  ExpressionPower createExpressionPower();

  /**
   * Returns a new object of class '<em>Expression Vector</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Vector</em>'.
   * @generated
   */
  ExpressionVector createExpressionVector();

  /**
   * Returns a new object of class '<em>Expression Map</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Expression Map</em>'.
   * @generated
   */
  ExpressionMap createExpressionMap();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ExpressionsPackage getExpressionsPackage();

} //ExpressionsFactory
