/**
 * generated by Xtext 2.25.0
 */
package nl.esi.comma.expressions.expressions;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see nl.esi.comma.expressions.expressions.ExpressionsFactory
 * @model kind="package"
 * @generated
 */
public interface ExpressionsPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "expressions";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.esi.nl/comma/expressions/Expressions";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "expressions";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ExpressionsPackage eINSTANCE = nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl.init();

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.VariableImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 0;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionNotImpl <em>Expression Not</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionNotImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionNot()
   * @generated
   */
  int EXPRESSION_NOT = 2;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_NOT__SUB = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Not</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_NOT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMinusImpl <em>Expression Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionMinusImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMinus()
   * @generated
   */
  int EXPRESSION_MINUS = 3;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINUS__SUB = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionPlusImpl <em>Expression Plus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionPlusImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionPlus()
   * @generated
   */
  int EXPRESSION_PLUS = 4;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_PLUS__SUB = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Plus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_PLUS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionBracketImpl <em>Expression Bracket</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionBracketImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionBracket()
   * @generated
   */
  int EXPRESSION_BRACKET = 5;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BRACKET__SUB = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Bracket</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BRACKET_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionConstantBoolImpl <em>Expression Constant Bool</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionConstantBoolImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionConstantBool()
   * @generated
   */
  int EXPRESSION_CONSTANT_BOOL = 6;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_BOOL__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Constant Bool</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_BOOL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionConstantIntImpl <em>Expression Constant Int</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionConstantIntImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionConstantInt()
   * @generated
   */
  int EXPRESSION_CONSTANT_INT = 7;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_INT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Constant Int</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_INT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionConstantStringImpl <em>Expression Constant String</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionConstantStringImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionConstantString()
   * @generated
   */
  int EXPRESSION_CONSTANT_STRING = 8;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_STRING__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Constant String</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_STRING_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionEnumLiteralImpl <em>Expression Enum Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionEnumLiteralImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionEnumLiteral()
   * @generated
   */
  int EXPRESSION_ENUM_LITERAL = 9;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ENUM_LITERAL__TYPE = 0;

  /**
   * The feature id for the '<em><b>Literal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ENUM_LITERAL__LITERAL = 1;

  /**
   * The number of structural features of the '<em>Expression Enum Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ENUM_LITERAL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionVariableImpl <em>Expression Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionVariableImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionVariable()
   * @generated
   */
  int EXPRESSION_VARIABLE = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VARIABLE__NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VARIABLE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionAnyImpl <em>Expression Any</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionAnyImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionAny()
   * @generated
   */
  int EXPRESSION_ANY = 11;

  /**
   * The number of structural features of the '<em>Expression Any</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ANY_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionFunctionCallImpl <em>Expression Function Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionFunctionCallImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionFunctionCall()
   * @generated
   */
  int EXPRESSION_FUNCTION_CALL = 12;

  /**
   * The feature id for the '<em><b>Function Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FUNCTION_CALL__FUNCTION_NAME = 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FUNCTION_CALL__ARGS = 1;

  /**
   * The number of structural features of the '<em>Expression Function Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FUNCTION_CALL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionQuantifierImpl <em>Expression Quantifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionQuantifierImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionQuantifier()
   * @generated
   */
  int EXPRESSION_QUANTIFIER = 13;

  /**
   * The feature id for the '<em><b>Quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_QUANTIFIER__QUANTIFIER = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Iterator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_QUANTIFIER__ITERATOR = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Collection</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_QUANTIFIER__COLLECTION = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Condition</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_QUANTIFIER__CONDITION = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Expression Quantifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_QUANTIFIER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.TypeAnnotationImpl <em>Type Annotation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.TypeAnnotationImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getTypeAnnotation()
   * @generated
   */
  int TYPE_ANNOTATION = 14;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_ANNOTATION__TYPE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Type Annotation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_ANNOTATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.PairImpl <em>Pair</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.PairImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getPair()
   * @generated
   */
  int PAIR = 15;

  /**
   * The feature id for the '<em><b>Key</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAIR__KEY = 0;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAIR__VALUE = 1;

  /**
   * The number of structural features of the '<em>Pair</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAIR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionBinaryImpl <em>Expression Binary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionBinaryImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionBinary()
   * @generated
   */
  int EXPRESSION_BINARY = 16;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BINARY__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BINARY__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Binary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_BINARY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionUnaryImpl <em>Expression Unary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionUnaryImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionUnary()
   * @generated
   */
  int EXPRESSION_UNARY = 17;

  /**
   * The feature id for the '<em><b>Sub</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_UNARY__SUB = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Unary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_UNARY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionAndImpl <em>Expression And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionAndImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionAnd()
   * @generated
   */
  int EXPRESSION_AND = 18;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_AND__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_AND__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_AND_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionOrImpl <em>Expression Or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionOrImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionOr()
   * @generated
   */
  int EXPRESSION_OR = 19;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_OR__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_OR__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_OR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionEqualImpl <em>Expression Equal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionEqualImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionEqual()
   * @generated
   */
  int EXPRESSION_EQUAL = 20;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_EQUAL__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_EQUAL__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Equal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_EQUAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionNEqualImpl <em>Expression NEqual</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionNEqualImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionNEqual()
   * @generated
   */
  int EXPRESSION_NEQUAL = 21;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_NEQUAL__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_NEQUAL__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression NEqual</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_NEQUAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionGeqImpl <em>Expression Geq</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionGeqImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionGeq()
   * @generated
   */
  int EXPRESSION_GEQ = 22;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_GEQ__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_GEQ__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Geq</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_GEQ_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionGreaterImpl <em>Expression Greater</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionGreaterImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionGreater()
   * @generated
   */
  int EXPRESSION_GREATER = 23;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_GREATER__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_GREATER__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Greater</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_GREATER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionLeqImpl <em>Expression Leq</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionLeqImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionLeq()
   * @generated
   */
  int EXPRESSION_LEQ = 24;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LEQ__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LEQ__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Leq</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LEQ_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionLessImpl <em>Expression Less</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionLessImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionLess()
   * @generated
   */
  int EXPRESSION_LESS = 25;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LESS__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LESS__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Less</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LESS_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionAdditionImpl <em>Expression Addition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionAdditionImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionAddition()
   * @generated
   */
  int EXPRESSION_ADDITION = 26;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ADDITION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ADDITION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Addition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_ADDITION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionSubtractionImpl <em>Expression Subtraction</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionSubtractionImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionSubtraction()
   * @generated
   */
  int EXPRESSION_SUBTRACTION = 27;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_SUBTRACTION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_SUBTRACTION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Subtraction</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_SUBTRACTION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMultiplyImpl <em>Expression Multiply</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionMultiplyImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMultiply()
   * @generated
   */
  int EXPRESSION_MULTIPLY = 28;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MULTIPLY__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MULTIPLY__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Multiply</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MULTIPLY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionDivisionImpl <em>Expression Division</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionDivisionImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionDivision()
   * @generated
   */
  int EXPRESSION_DIVISION = 29;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_DIVISION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_DIVISION__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Division</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_DIVISION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMaximumImpl <em>Expression Maximum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionMaximumImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMaximum()
   * @generated
   */
  int EXPRESSION_MAXIMUM = 30;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAXIMUM__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAXIMUM__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Maximum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAXIMUM_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMinimumImpl <em>Expression Minimum</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionMinimumImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMinimum()
   * @generated
   */
  int EXPRESSION_MINIMUM = 31;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINIMUM__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINIMUM__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Minimum</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MINIMUM_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionModuloImpl <em>Expression Modulo</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionModuloImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionModulo()
   * @generated
   */
  int EXPRESSION_MODULO = 32;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MODULO__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MODULO__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Modulo</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MODULO_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionPowerImpl <em>Expression Power</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionPowerImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionPower()
   * @generated
   */
  int EXPRESSION_POWER = 33;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_POWER__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_POWER__RIGHT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Power</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_POWER_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionVectorImpl <em>Expression Vector</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionVectorImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionVector()
   * @generated
   */
  int EXPRESSION_VECTOR = 34;

  /**
   * The feature id for the '<em><b>Type Annotation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VECTOR__TYPE_ANNOTATION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VECTOR__ELEMENTS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Vector</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VECTOR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMapImpl <em>Expression Map</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionMapImpl
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMap()
   * @generated
   */
  int EXPRESSION_MAP = 35;

  /**
   * The feature id for the '<em><b>Type Annotation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAP__TYPE_ANNOTATION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Pairs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAP__PAIRS = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression Map</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_MAP_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.expressions.expressions.QUANTIFIER <em>QUANTIFIER</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.expressions.expressions.QUANTIFIER
   * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getQUANTIFIER()
   * @generated
   */
  int QUANTIFIER = 36;


  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see nl.esi.comma.expressions.expressions.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.Variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see nl.esi.comma.expressions.expressions.Variable#getName()
   * @see #getVariable()
   * @generated
   */
  EAttribute getVariable_Name();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see nl.esi.comma.expressions.expressions.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionNot <em>Expression Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Not</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionNot
   * @generated
   */
  EClass getExpressionNot();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionMinus <em>Expression Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Minus</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionMinus
   * @generated
   */
  EClass getExpressionMinus();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionPlus <em>Expression Plus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Plus</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionPlus
   * @generated
   */
  EClass getExpressionPlus();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionBracket <em>Expression Bracket</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Bracket</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionBracket
   * @generated
   */
  EClass getExpressionBracket();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionConstantBool <em>Expression Constant Bool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Constant Bool</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionConstantBool
   * @generated
   */
  EClass getExpressionConstantBool();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.ExpressionConstantBool#isValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionConstantBool#isValue()
   * @see #getExpressionConstantBool()
   * @generated
   */
  EAttribute getExpressionConstantBool_Value();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionConstantInt <em>Expression Constant Int</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Constant Int</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionConstantInt
   * @generated
   */
  EClass getExpressionConstantInt();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.ExpressionConstantInt#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionConstantInt#getValue()
   * @see #getExpressionConstantInt()
   * @generated
   */
  EAttribute getExpressionConstantInt_Value();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionConstantString <em>Expression Constant String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Constant String</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionConstantString
   * @generated
   */
  EClass getExpressionConstantString();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.ExpressionConstantString#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionConstantString#getValue()
   * @see #getExpressionConstantString()
   * @generated
   */
  EAttribute getExpressionConstantString_Value();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionEnumLiteral <em>Expression Enum Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Enum Literal</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionEnumLiteral
   * @generated
   */
  EClass getExpressionEnumLiteral();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.ExpressionEnumLiteral#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionEnumLiteral#getType()
   * @see #getExpressionEnumLiteral()
   * @generated
   */
  EAttribute getExpressionEnumLiteral_Type();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.ExpressionEnumLiteral#getLiteral <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Literal</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionEnumLiteral#getLiteral()
   * @see #getExpressionEnumLiteral()
   * @generated
   */
  EAttribute getExpressionEnumLiteral_Literal();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionVariable <em>Expression Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Variable</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionVariable
   * @generated
   */
  EClass getExpressionVariable();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.ExpressionVariable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionVariable#getName()
   * @see #getExpressionVariable()
   * @generated
   */
  EAttribute getExpressionVariable_Name();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionAny <em>Expression Any</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Any</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionAny
   * @generated
   */
  EClass getExpressionAny();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionFunctionCall <em>Expression Function Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Function Call</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionFunctionCall
   * @generated
   */
  EClass getExpressionFunctionCall();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.ExpressionFunctionCall#getFunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Function Name</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionFunctionCall#getFunctionName()
   * @see #getExpressionFunctionCall()
   * @generated
   */
  EAttribute getExpressionFunctionCall_FunctionName();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.expressions.expressions.ExpressionFunctionCall#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionFunctionCall#getArgs()
   * @see #getExpressionFunctionCall()
   * @generated
   */
  EReference getExpressionFunctionCall_Args();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionQuantifier <em>Expression Quantifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Quantifier</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionQuantifier
   * @generated
   */
  EClass getExpressionQuantifier();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.ExpressionQuantifier#getQuantifier <em>Quantifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Quantifier</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionQuantifier#getQuantifier()
   * @see #getExpressionQuantifier()
   * @generated
   */
  EAttribute getExpressionQuantifier_Quantifier();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.ExpressionQuantifier#getIterator <em>Iterator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Iterator</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionQuantifier#getIterator()
   * @see #getExpressionQuantifier()
   * @generated
   */
  EReference getExpressionQuantifier_Iterator();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.ExpressionQuantifier#getCollection <em>Collection</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Collection</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionQuantifier#getCollection()
   * @see #getExpressionQuantifier()
   * @generated
   */
  EReference getExpressionQuantifier_Collection();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.ExpressionQuantifier#getCondition <em>Condition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Condition</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionQuantifier#getCondition()
   * @see #getExpressionQuantifier()
   * @generated
   */
  EReference getExpressionQuantifier_Condition();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.TypeAnnotation <em>Type Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Type Annotation</em>'.
   * @see nl.esi.comma.expressions.expressions.TypeAnnotation
   * @generated
   */
  EClass getTypeAnnotation();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.expressions.expressions.TypeAnnotation#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see nl.esi.comma.expressions.expressions.TypeAnnotation#getType()
   * @see #getTypeAnnotation()
   * @generated
   */
  EAttribute getTypeAnnotation_Type();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.Pair <em>Pair</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Pair</em>'.
   * @see nl.esi.comma.expressions.expressions.Pair
   * @generated
   */
  EClass getPair();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.Pair#getKey <em>Key</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Key</em>'.
   * @see nl.esi.comma.expressions.expressions.Pair#getKey()
   * @see #getPair()
   * @generated
   */
  EReference getPair_Key();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.Pair#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see nl.esi.comma.expressions.expressions.Pair#getValue()
   * @see #getPair()
   * @generated
   */
  EReference getPair_Value();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionBinary <em>Expression Binary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Binary</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionBinary
   * @generated
   */
  EClass getExpressionBinary();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.ExpressionBinary#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionBinary#getLeft()
   * @see #getExpressionBinary()
   * @generated
   */
  EReference getExpressionBinary_Left();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.ExpressionBinary#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionBinary#getRight()
   * @see #getExpressionBinary()
   * @generated
   */
  EReference getExpressionBinary_Right();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionUnary <em>Expression Unary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Unary</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionUnary
   * @generated
   */
  EClass getExpressionUnary();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.ExpressionUnary#getSub <em>Sub</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sub</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionUnary#getSub()
   * @see #getExpressionUnary()
   * @generated
   */
  EReference getExpressionUnary_Sub();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionAnd <em>Expression And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression And</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionAnd
   * @generated
   */
  EClass getExpressionAnd();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionOr <em>Expression Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Or</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionOr
   * @generated
   */
  EClass getExpressionOr();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionEqual <em>Expression Equal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Equal</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionEqual
   * @generated
   */
  EClass getExpressionEqual();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionNEqual <em>Expression NEqual</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression NEqual</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionNEqual
   * @generated
   */
  EClass getExpressionNEqual();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionGeq <em>Expression Geq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Geq</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionGeq
   * @generated
   */
  EClass getExpressionGeq();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionGreater <em>Expression Greater</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Greater</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionGreater
   * @generated
   */
  EClass getExpressionGreater();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionLeq <em>Expression Leq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Leq</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionLeq
   * @generated
   */
  EClass getExpressionLeq();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionLess <em>Expression Less</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Less</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionLess
   * @generated
   */
  EClass getExpressionLess();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionAddition <em>Expression Addition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Addition</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionAddition
   * @generated
   */
  EClass getExpressionAddition();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionSubtraction <em>Expression Subtraction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Subtraction</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionSubtraction
   * @generated
   */
  EClass getExpressionSubtraction();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionMultiply <em>Expression Multiply</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Multiply</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionMultiply
   * @generated
   */
  EClass getExpressionMultiply();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionDivision <em>Expression Division</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Division</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionDivision
   * @generated
   */
  EClass getExpressionDivision();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionMaximum <em>Expression Maximum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Maximum</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionMaximum
   * @generated
   */
  EClass getExpressionMaximum();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionMinimum <em>Expression Minimum</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Minimum</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionMinimum
   * @generated
   */
  EClass getExpressionMinimum();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionModulo <em>Expression Modulo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Modulo</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionModulo
   * @generated
   */
  EClass getExpressionModulo();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionPower <em>Expression Power</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Power</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionPower
   * @generated
   */
  EClass getExpressionPower();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionVector <em>Expression Vector</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Vector</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionVector
   * @generated
   */
  EClass getExpressionVector();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.ExpressionVector#getTypeAnnotation <em>Type Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Annotation</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionVector#getTypeAnnotation()
   * @see #getExpressionVector()
   * @generated
   */
  EReference getExpressionVector_TypeAnnotation();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.expressions.expressions.ExpressionVector#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Elements</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionVector#getElements()
   * @see #getExpressionVector()
   * @generated
   */
  EReference getExpressionVector_Elements();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.expressions.expressions.ExpressionMap <em>Expression Map</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Map</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionMap
   * @generated
   */
  EClass getExpressionMap();

  /**
   * Returns the meta object for the containment reference '{@link nl.esi.comma.expressions.expressions.ExpressionMap#getTypeAnnotation <em>Type Annotation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Annotation</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionMap#getTypeAnnotation()
   * @see #getExpressionMap()
   * @generated
   */
  EReference getExpressionMap_TypeAnnotation();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.expressions.expressions.ExpressionMap#getPairs <em>Pairs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Pairs</em>'.
   * @see nl.esi.comma.expressions.expressions.ExpressionMap#getPairs()
   * @see #getExpressionMap()
   * @generated
   */
  EReference getExpressionMap_Pairs();

  /**
   * Returns the meta object for enum '{@link nl.esi.comma.expressions.expressions.QUANTIFIER <em>QUANTIFIER</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>QUANTIFIER</em>'.
   * @see nl.esi.comma.expressions.expressions.QUANTIFIER
   * @generated
   */
  EEnum getQUANTIFIER();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  ExpressionsFactory getExpressionsFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.VariableImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getVariable_Name();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionNotImpl <em>Expression Not</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionNotImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionNot()
     * @generated
     */
    EClass EXPRESSION_NOT = eINSTANCE.getExpressionNot();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMinusImpl <em>Expression Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionMinusImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMinus()
     * @generated
     */
    EClass EXPRESSION_MINUS = eINSTANCE.getExpressionMinus();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionPlusImpl <em>Expression Plus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionPlusImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionPlus()
     * @generated
     */
    EClass EXPRESSION_PLUS = eINSTANCE.getExpressionPlus();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionBracketImpl <em>Expression Bracket</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionBracketImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionBracket()
     * @generated
     */
    EClass EXPRESSION_BRACKET = eINSTANCE.getExpressionBracket();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionConstantBoolImpl <em>Expression Constant Bool</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionConstantBoolImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionConstantBool()
     * @generated
     */
    EClass EXPRESSION_CONSTANT_BOOL = eINSTANCE.getExpressionConstantBool();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_CONSTANT_BOOL__VALUE = eINSTANCE.getExpressionConstantBool_Value();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionConstantIntImpl <em>Expression Constant Int</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionConstantIntImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionConstantInt()
     * @generated
     */
    EClass EXPRESSION_CONSTANT_INT = eINSTANCE.getExpressionConstantInt();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_CONSTANT_INT__VALUE = eINSTANCE.getExpressionConstantInt_Value();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionConstantStringImpl <em>Expression Constant String</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionConstantStringImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionConstantString()
     * @generated
     */
    EClass EXPRESSION_CONSTANT_STRING = eINSTANCE.getExpressionConstantString();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_CONSTANT_STRING__VALUE = eINSTANCE.getExpressionConstantString_Value();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionEnumLiteralImpl <em>Expression Enum Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionEnumLiteralImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionEnumLiteral()
     * @generated
     */
    EClass EXPRESSION_ENUM_LITERAL = eINSTANCE.getExpressionEnumLiteral();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_ENUM_LITERAL__TYPE = eINSTANCE.getExpressionEnumLiteral_Type();

    /**
     * The meta object literal for the '<em><b>Literal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_ENUM_LITERAL__LITERAL = eINSTANCE.getExpressionEnumLiteral_Literal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionVariableImpl <em>Expression Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionVariableImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionVariable()
     * @generated
     */
    EClass EXPRESSION_VARIABLE = eINSTANCE.getExpressionVariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_VARIABLE__NAME = eINSTANCE.getExpressionVariable_Name();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionAnyImpl <em>Expression Any</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionAnyImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionAny()
     * @generated
     */
    EClass EXPRESSION_ANY = eINSTANCE.getExpressionAny();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionFunctionCallImpl <em>Expression Function Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionFunctionCallImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionFunctionCall()
     * @generated
     */
    EClass EXPRESSION_FUNCTION_CALL = eINSTANCE.getExpressionFunctionCall();

    /**
     * The meta object literal for the '<em><b>Function Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_FUNCTION_CALL__FUNCTION_NAME = eINSTANCE.getExpressionFunctionCall_FunctionName();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_FUNCTION_CALL__ARGS = eINSTANCE.getExpressionFunctionCall_Args();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionQuantifierImpl <em>Expression Quantifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionQuantifierImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionQuantifier()
     * @generated
     */
    EClass EXPRESSION_QUANTIFIER = eINSTANCE.getExpressionQuantifier();

    /**
     * The meta object literal for the '<em><b>Quantifier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION_QUANTIFIER__QUANTIFIER = eINSTANCE.getExpressionQuantifier_Quantifier();

    /**
     * The meta object literal for the '<em><b>Iterator</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_QUANTIFIER__ITERATOR = eINSTANCE.getExpressionQuantifier_Iterator();

    /**
     * The meta object literal for the '<em><b>Collection</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_QUANTIFIER__COLLECTION = eINSTANCE.getExpressionQuantifier_Collection();

    /**
     * The meta object literal for the '<em><b>Condition</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_QUANTIFIER__CONDITION = eINSTANCE.getExpressionQuantifier_Condition();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.TypeAnnotationImpl <em>Type Annotation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.TypeAnnotationImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getTypeAnnotation()
     * @generated
     */
    EClass TYPE_ANNOTATION = eINSTANCE.getTypeAnnotation();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_ANNOTATION__TYPE = eINSTANCE.getTypeAnnotation_Type();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.PairImpl <em>Pair</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.PairImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getPair()
     * @generated
     */
    EClass PAIR = eINSTANCE.getPair();

    /**
     * The meta object literal for the '<em><b>Key</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAIR__KEY = eINSTANCE.getPair_Key();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAIR__VALUE = eINSTANCE.getPair_Value();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionBinaryImpl <em>Expression Binary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionBinaryImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionBinary()
     * @generated
     */
    EClass EXPRESSION_BINARY = eINSTANCE.getExpressionBinary();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_BINARY__LEFT = eINSTANCE.getExpressionBinary_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_BINARY__RIGHT = eINSTANCE.getExpressionBinary_Right();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionUnaryImpl <em>Expression Unary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionUnaryImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionUnary()
     * @generated
     */
    EClass EXPRESSION_UNARY = eINSTANCE.getExpressionUnary();

    /**
     * The meta object literal for the '<em><b>Sub</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_UNARY__SUB = eINSTANCE.getExpressionUnary_Sub();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionAndImpl <em>Expression And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionAndImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionAnd()
     * @generated
     */
    EClass EXPRESSION_AND = eINSTANCE.getExpressionAnd();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionOrImpl <em>Expression Or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionOrImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionOr()
     * @generated
     */
    EClass EXPRESSION_OR = eINSTANCE.getExpressionOr();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionEqualImpl <em>Expression Equal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionEqualImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionEqual()
     * @generated
     */
    EClass EXPRESSION_EQUAL = eINSTANCE.getExpressionEqual();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionNEqualImpl <em>Expression NEqual</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionNEqualImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionNEqual()
     * @generated
     */
    EClass EXPRESSION_NEQUAL = eINSTANCE.getExpressionNEqual();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionGeqImpl <em>Expression Geq</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionGeqImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionGeq()
     * @generated
     */
    EClass EXPRESSION_GEQ = eINSTANCE.getExpressionGeq();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionGreaterImpl <em>Expression Greater</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionGreaterImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionGreater()
     * @generated
     */
    EClass EXPRESSION_GREATER = eINSTANCE.getExpressionGreater();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionLeqImpl <em>Expression Leq</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionLeqImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionLeq()
     * @generated
     */
    EClass EXPRESSION_LEQ = eINSTANCE.getExpressionLeq();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionLessImpl <em>Expression Less</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionLessImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionLess()
     * @generated
     */
    EClass EXPRESSION_LESS = eINSTANCE.getExpressionLess();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionAdditionImpl <em>Expression Addition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionAdditionImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionAddition()
     * @generated
     */
    EClass EXPRESSION_ADDITION = eINSTANCE.getExpressionAddition();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionSubtractionImpl <em>Expression Subtraction</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionSubtractionImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionSubtraction()
     * @generated
     */
    EClass EXPRESSION_SUBTRACTION = eINSTANCE.getExpressionSubtraction();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMultiplyImpl <em>Expression Multiply</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionMultiplyImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMultiply()
     * @generated
     */
    EClass EXPRESSION_MULTIPLY = eINSTANCE.getExpressionMultiply();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionDivisionImpl <em>Expression Division</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionDivisionImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionDivision()
     * @generated
     */
    EClass EXPRESSION_DIVISION = eINSTANCE.getExpressionDivision();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMaximumImpl <em>Expression Maximum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionMaximumImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMaximum()
     * @generated
     */
    EClass EXPRESSION_MAXIMUM = eINSTANCE.getExpressionMaximum();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMinimumImpl <em>Expression Minimum</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionMinimumImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMinimum()
     * @generated
     */
    EClass EXPRESSION_MINIMUM = eINSTANCE.getExpressionMinimum();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionModuloImpl <em>Expression Modulo</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionModuloImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionModulo()
     * @generated
     */
    EClass EXPRESSION_MODULO = eINSTANCE.getExpressionModulo();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionPowerImpl <em>Expression Power</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionPowerImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionPower()
     * @generated
     */
    EClass EXPRESSION_POWER = eINSTANCE.getExpressionPower();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionVectorImpl <em>Expression Vector</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionVectorImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionVector()
     * @generated
     */
    EClass EXPRESSION_VECTOR = eINSTANCE.getExpressionVector();

    /**
     * The meta object literal for the '<em><b>Type Annotation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_VECTOR__TYPE_ANNOTATION = eINSTANCE.getExpressionVector_TypeAnnotation();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_VECTOR__ELEMENTS = eINSTANCE.getExpressionVector_Elements();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.impl.ExpressionMapImpl <em>Expression Map</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionMapImpl
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getExpressionMap()
     * @generated
     */
    EClass EXPRESSION_MAP = eINSTANCE.getExpressionMap();

    /**
     * The meta object literal for the '<em><b>Type Annotation</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MAP__TYPE_ANNOTATION = eINSTANCE.getExpressionMap_TypeAnnotation();

    /**
     * The meta object literal for the '<em><b>Pairs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_MAP__PAIRS = eINSTANCE.getExpressionMap_Pairs();

    /**
     * The meta object literal for the '{@link nl.esi.comma.expressions.expressions.QUANTIFIER <em>QUANTIFIER</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.expressions.expressions.QUANTIFIER
     * @see nl.esi.comma.expressions.expressions.impl.ExpressionsPackageImpl#getQUANTIFIER()
     * @generated
     */
    EEnum QUANTIFIER = eINSTANCE.getQUANTIFIER();

  }

} //ExpressionsPackage
