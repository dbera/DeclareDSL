/**
 * generated by Xtext 2.25.0
 */
package nl.esi.comma.expressions.expressions;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Expression Vector</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link nl.esi.comma.expressions.expressions.ExpressionVector#getTypeAnnotation <em>Type Annotation</em>}</li>
 *   <li>{@link nl.esi.comma.expressions.expressions.ExpressionVector#getElements <em>Elements</em>}</li>
 * </ul>
 *
 * @see nl.esi.comma.expressions.expressions.ExpressionsPackage#getExpressionVector()
 * @model
 * @generated
 */
public interface ExpressionVector extends Expression
{
  /**
   * Returns the value of the '<em><b>Type Annotation</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type Annotation</em>' containment reference.
   * @see #setTypeAnnotation(TypeAnnotation)
   * @see nl.esi.comma.expressions.expressions.ExpressionsPackage#getExpressionVector_TypeAnnotation()
   * @model containment="true"
   * @generated
   */
  TypeAnnotation getTypeAnnotation();

  /**
   * Sets the value of the '{@link nl.esi.comma.expressions.expressions.ExpressionVector#getTypeAnnotation <em>Type Annotation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type Annotation</em>' containment reference.
   * @see #getTypeAnnotation()
   * @generated
   */
  void setTypeAnnotation(TypeAnnotation value);

  /**
   * Returns the value of the '<em><b>Elements</b></em>' containment reference list.
   * The list contents are of type {@link nl.esi.comma.expressions.expressions.Expression}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Elements</em>' containment reference list.
   * @see nl.esi.comma.expressions.expressions.ExpressionsPackage#getExpressionVector_Elements()
   * @model containment="true"
   * @generated
   */
  EList<Expression> getElements();

} // ExpressionVector
