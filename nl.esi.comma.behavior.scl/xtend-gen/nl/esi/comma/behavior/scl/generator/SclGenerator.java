/**
 * generated by Xtext 2.25.0
 */
package nl.esi.comma.behavior.scl.generator;

import java.util.Map;
import nl.esi.comma.behavior.scl.scl.Model;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IWorkspaceRoot;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.Path;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class SclGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _head = IteratorExtensions.<EObject>head(resource.getAllContents());
    if ((_head instanceof Model)) {
      EObject _head_1 = IteratorExtensions.<EObject>head(resource.getAllContents());
      final Model constraints = ((Model) _head_1);
      URI uri = fsa.getURI("./");
      IWorkspaceRoot _root = ResourcesPlugin.getWorkspace().getRoot();
      String _platformString = uri.toPlatformString(true);
      Path _path = new Path(_platformString);
      IFile file = _root.getFile(_path);
      String srcGenPath = file.getLocation().toOSString();
      final String path = "\\Constraints\\";
      Map<String, ConstraintStateMachine> mapContraintToAutomata = new ConstraintsStateMachineGenerator().generateStateMachine(constraints, srcGenPath, "spec");
      new ScenarioGenerator().generateTestScenarios(mapContraintToAutomata, constraints.getActions(), constraints, 1, fsa, path, "task-name", "dfs");
    }
  }
}
