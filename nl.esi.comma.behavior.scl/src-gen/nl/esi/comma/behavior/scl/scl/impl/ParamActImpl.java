/**
 * generated by Xtext 2.25.0
 */
package nl.esi.comma.behavior.scl.scl.impl;

import nl.esi.comma.behavior.scl.scl.Action;
import nl.esi.comma.behavior.scl.scl.ParamAct;
import nl.esi.comma.behavior.scl.scl.SclPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Param Act</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.esi.comma.behavior.scl.scl.impl.ParamActImpl#getAct <em>Act</em>}</li>
 *   <li>{@link nl.esi.comma.behavior.scl.scl.impl.ParamActImpl#getIdx <em>Idx</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParamActImpl extends MinimalEObjectImpl.Container implements ParamAct
{
  /**
   * The cached value of the '{@link #getAct() <em>Act</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAct()
   * @generated
   * @ordered
   */
  protected Action act;

  /**
   * The default value of the '{@link #getIdx() <em>Idx</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdx()
   * @generated
   * @ordered
   */
  protected static final int IDX_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getIdx() <em>Idx</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdx()
   * @generated
   * @ordered
   */
  protected int idx = IDX_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParamActImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SclPackage.Literals.PARAM_ACT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Action getAct()
  {
    if (act != null && act.eIsProxy())
    {
      InternalEObject oldAct = (InternalEObject)act;
      act = (Action)eResolveProxy(oldAct);
      if (act != oldAct)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SclPackage.PARAM_ACT__ACT, oldAct, act));
      }
    }
    return act;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action basicGetAct()
  {
    return act;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAct(Action newAct)
  {
    Action oldAct = act;
    act = newAct;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SclPackage.PARAM_ACT__ACT, oldAct, act));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getIdx()
  {
    return idx;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIdx(int newIdx)
  {
    int oldIdx = idx;
    idx = newIdx;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SclPackage.PARAM_ACT__IDX, oldIdx, idx));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SclPackage.PARAM_ACT__ACT:
        if (resolve) return getAct();
        return basicGetAct();
      case SclPackage.PARAM_ACT__IDX:
        return getIdx();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SclPackage.PARAM_ACT__ACT:
        setAct((Action)newValue);
        return;
      case SclPackage.PARAM_ACT__IDX:
        setIdx((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SclPackage.PARAM_ACT__ACT:
        setAct((Action)null);
        return;
      case SclPackage.PARAM_ACT__IDX:
        setIdx(IDX_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SclPackage.PARAM_ACT__ACT:
        return act != null;
      case SclPackage.PARAM_ACT__IDX:
        return idx != IDX_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (idx: ");
    result.append(idx);
    result.append(')');
    return result.toString();
  }

} //ParamActImpl
