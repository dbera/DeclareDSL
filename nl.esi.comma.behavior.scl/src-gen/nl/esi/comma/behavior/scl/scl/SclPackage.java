/**
 * generated by Xtext 2.25.0
 */
package nl.esi.comma.behavior.scl.scl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see nl.esi.comma.behavior.scl.scl.SclFactory
 * @model kind="package"
 * @generated
 */
public interface SclPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "scl";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.esi.nl/comma/behavior/scl/Scl";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "scl";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  SclPackage eINSTANCE = nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl.init();

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ModelImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Features</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__FEATURES = 0;

  /**
   * The feature id for the '<em><b>Actions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__ACTIONS = 1;

  /**
   * The feature id for the '<em><b>Sequences</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__SEQUENCES = 2;

  /**
   * The feature id for the '<em><b>Composition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__COMPOSITION = 3;

  /**
   * The feature id for the '<em><b>Common Features</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__COMMON_FEATURES = 4;

  /**
   * The feature id for the '<em><b>Templates</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__TEMPLATES = 5;

  /**
   * The feature id for the '<em><b>Use Labels</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__USE_LABELS = 6;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.CompositionImpl <em>Composition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.CompositionImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getComposition()
   * @generated
   */
  int COMPOSITION = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Templates</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__TEMPLATES = 1;

  /**
   * The feature id for the '<em><b>Desc Txt</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__DESC_TXT = 2;

  /**
   * The feature id for the '<em><b>Common Features</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__COMMON_FEATURES = 3;

  /**
   * The feature id for the '<em><b>Tag Str</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION__TAG_STR = 4;

  /**
   * The number of structural features of the '<em>Composition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOSITION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.SequenceDefImpl <em>Sequence Def</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.SequenceDefImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getSequenceDef()
   * @generated
   */
  int SEQUENCE_DEF = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_DEF__NAME = 0;

  /**
   * The feature id for the '<em><b>Act List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_DEF__ACT_LIST = 1;

  /**
   * The number of structural features of the '<em>Sequence Def</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SEQUENCE_DEF_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ParamActImpl <em>Param Act</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ParamActImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getParamAct()
   * @generated
   */
  int PARAM_ACT = 3;

  /**
   * The feature id for the '<em><b>Act</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_ACT__ACT = 0;

  /**
   * The feature id for the '<em><b>Idx</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_ACT__IDX = 1;

  /**
   * The number of structural features of the '<em>Param Act</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAM_ACT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.RefImpl <em>Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.RefImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getRef()
   * @generated
   */
  int REF = 4;

  /**
   * The number of structural features of the '<em>Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REF_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.RefStepImpl <em>Ref Step</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.RefStepImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getRefStep()
   * @generated
   */
  int REF_STEP = 5;

  /**
   * The feature id for the '<em><b>Step</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REF_STEP__STEP = REF_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Idx</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REF_STEP__IDX = REF_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Ref Step</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REF_STEP_FEATURE_COUNT = REF_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.RefSequenceImpl <em>Ref Sequence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.RefSequenceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getRefSequence()
   * @generated
   */
  int REF_SEQUENCE = 6;

  /**
   * The feature id for the '<em><b>Seq</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REF_SEQUENCE__SEQ = REF_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Ref Sequence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REF_SEQUENCE_FEATURE_COUNT = REF_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.FeaturesImpl <em>Features</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.FeaturesImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getFeatures()
   * @generated
   */
  int FEATURES = 7;

  /**
   * The feature id for the '<em><b>Feature</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURES__FEATURE = 0;

  /**
   * The number of structural features of the '<em>Features</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.FeatureImpl <em>Feature</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.FeatureImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getFeature()
   * @generated
   */
  int FEATURE = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE__NAME = 0;

  /**
   * The number of structural features of the '<em>Feature</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FEATURE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ActionsImpl <em>Actions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ActionsImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getActions()
   * @generated
   */
  int ACTIONS = 9;

  /**
   * The feature id for the '<em><b>Act</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTIONS__ACT = 0;

  /**
   * The number of structural features of the '<em>Actions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTIONS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ActionParamImpl <em>Action Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ActionParamImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getActionParam()
   * @generated
   */
  int ACTION_PARAM = 10;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTION_PARAM__PARAMETERS = 0;

  /**
   * The number of structural features of the '<em>Action Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTION_PARAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ActionImpl <em>Action</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ActionImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAction()
   * @generated
   */
  int ACTION = 11;

  /**
   * The feature id for the '<em><b>Act</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTION__ACT = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTION__NAME = 1;

  /**
   * The feature id for the '<em><b>Label</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTION__LABEL = 2;

  /**
   * The feature id for the '<em><b>Act Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTION__ACT_PARAM = 3;

  /**
   * The number of structural features of the '<em>Action</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.TemplatesImpl <em>Templates</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.TemplatesImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getTemplates()
   * @generated
   */
  int TEMPLATES = 12;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEMPLATES__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEMPLATES__TYPE = 1;

  /**
   * The feature id for the '<em><b>Features</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEMPLATES__FEATURES = 2;

  /**
   * The number of structural features of the '<em>Templates</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TEMPLATES_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.PastImpl <em>Past</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.PastImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getPast()
   * @generated
   */
  int PAST = 13;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST__TYPE = 0;

  /**
   * The number of structural features of the '<em>Past</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PAST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.FutureImpl <em>Future</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.FutureImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getFuture()
   * @generated
   */
  int FUTURE = 14;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE__TYPE = 0;

  /**
   * The number of structural features of the '<em>Future</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUTURE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.DependenciesImpl <em>Dependencies</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.DependenciesImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getDependencies()
   * @generated
   */
  int DEPENDENCIES = 15;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEPENDENCIES__TYPE = 0;

  /**
   * The number of structural features of the '<em>Dependencies</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DEPENDENCIES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ChoiceImpl <em>Choice</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ChoiceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getChoice()
   * @generated
   */
  int CHOICE = 16;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHOICE__TYPE = 0;

  /**
   * The number of structural features of the '<em>Choice</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHOICE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ExistentialImpl <em>Existential</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ExistentialImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getExistential()
   * @generated
   */
  int EXISTENTIAL = 17;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXISTENTIAL__TYPE = 0;

  /**
   * The number of structural features of the '<em>Existential</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXISTENTIAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ExclusiveChoiceImpl <em>Exclusive Choice</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ExclusiveChoiceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getExclusiveChoice()
   * @generated
   */
  int EXCLUSIVE_CHOICE = 18;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCLUSIVE_CHOICE__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCLUSIVE_CHOICE__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCLUSIVE_CHOICE__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCLUSIVE_CHOICE__REF_B = 3;

  /**
   * The number of structural features of the '<em>Exclusive Choice</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXCLUSIVE_CHOICE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.SimpleChoiceImpl <em>Simple Choice</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.SimpleChoiceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getSimpleChoice()
   * @generated
   */
  int SIMPLE_CHOICE = 19;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_CHOICE__REF_A = 0;

  /**
   * The number of structural features of the '<em>Simple Choice</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_CHOICE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.NotChainSuccessionImpl <em>Not Chain Succession</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.NotChainSuccessionImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getNotChainSuccession()
   * @generated
   */
  int NOT_CHAIN_SUCCESSION = 20;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_CHAIN_SUCCESSION__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_CHAIN_SUCCESSION__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_CHAIN_SUCCESSION__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_CHAIN_SUCCESSION__REF_B = 3;

  /**
   * The number of structural features of the '<em>Not Chain Succession</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_CHAIN_SUCCESSION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.NotCoExistanceImpl <em>Not Co Existance</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.NotCoExistanceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getNotCoExistance()
   * @generated
   */
  int NOT_CO_EXISTANCE = 21;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_CO_EXISTANCE__REF_A = 0;

  /**
   * The number of structural features of the '<em>Not Co Existance</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_CO_EXISTANCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.NotSuccessionImpl <em>Not Succession</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.NotSuccessionImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getNotSuccession()
   * @generated
   */
  int NOT_SUCCESSION = 22;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_SUCCESSION__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_SUCCESSION__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_SUCCESSION__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_SUCCESSION__REF_B = 3;

  /**
   * The number of structural features of the '<em>Not Succession</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_SUCCESSION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ChainSuccessionImpl <em>Chain Succession</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ChainSuccessionImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getChainSuccession()
   * @generated
   */
  int CHAIN_SUCCESSION = 23;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_SUCCESSION__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_SUCCESSION__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_SUCCESSION__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_SUCCESSION__REF_B = 3;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_SUCCESSION__MIN_VAL = 4;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_SUCCESSION__MAX_VAL = 5;

  /**
   * The number of structural features of the '<em>Chain Succession</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_SUCCESSION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.AlternateSuccessionImpl <em>Alternate Succession</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.AlternateSuccessionImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAlternateSuccession()
   * @generated
   */
  int ALTERNATE_SUCCESSION = 24;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_SUCCESSION__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_SUCCESSION__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_SUCCESSION__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_SUCCESSION__REF_B = 3;

  /**
   * The feature id for the '<em><b>Either C</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_SUCCESSION__EITHER_C = 4;

  /**
   * The feature id for the '<em><b>Negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_SUCCESSION__NEGATION = 5;

  /**
   * The feature id for the '<em><b>Ref C</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_SUCCESSION__REF_C = 6;

  /**
   * The number of structural features of the '<em>Alternate Succession</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_SUCCESSION_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.SuccessionImpl <em>Succession</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.SuccessionImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getSuccession()
   * @generated
   */
  int SUCCESSION = 25;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUCCESSION__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUCCESSION__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUCCESSION__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUCCESSION__REF_B = 3;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUCCESSION__MIN_VAL = 4;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUCCESSION__MAX_VAL = 5;

  /**
   * The number of structural features of the '<em>Succession</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUCCESSION_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.CoExistanceImpl <em>Co Existance</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.CoExistanceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getCoExistance()
   * @generated
   */
  int CO_EXISTANCE = 26;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CO_EXISTANCE__REF_A = 0;

  /**
   * The number of structural features of the '<em>Co Existance</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CO_EXISTANCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.RespondedExistenceImpl <em>Responded Existence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.RespondedExistenceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getRespondedExistence()
   * @generated
   */
  int RESPONDED_EXISTENCE = 27;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONDED_EXISTENCE__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONDED_EXISTENCE__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONDED_EXISTENCE__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONDED_EXISTENCE__REF_B = 3;

  /**
   * The number of structural features of the '<em>Responded Existence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONDED_EXISTENCE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ChainPrecedenceImpl <em>Chain Precedence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ChainPrecedenceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getChainPrecedence()
   * @generated
   */
  int CHAIN_PRECEDENCE = 28;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_PRECEDENCE__EITHER_B = 0;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_PRECEDENCE__REF_B = 1;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_PRECEDENCE__EITHER_A = 2;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_PRECEDENCE__REF_A = 3;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_PRECEDENCE__NOT = 4;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_PRECEDENCE__MIN_VAL = 5;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_PRECEDENCE__MAX_VAL = 6;

  /**
   * The number of structural features of the '<em>Chain Precedence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_PRECEDENCE_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ChainResponseImpl <em>Chain Response</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ChainResponseImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getChainResponse()
   * @generated
   */
  int CHAIN_RESPONSE = 29;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_RESPONSE__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_RESPONSE__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_RESPONSE__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_RESPONSE__REF_B = 3;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_RESPONSE__NOT = 4;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_RESPONSE__MIN_VAL = 5;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_RESPONSE__MAX_VAL = 6;

  /**
   * The number of structural features of the '<em>Chain Response</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CHAIN_RESPONSE_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.AlternateResponseImpl <em>Alternate Response</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.AlternateResponseImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAlternateResponse()
   * @generated
   */
  int ALTERNATE_RESPONSE = 30;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__REF_B = 3;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__MIN_VAL = 4;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__MAX_VAL = 5;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__NOT = 6;

  /**
   * The feature id for the '<em><b>Either C</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__EITHER_C = 7;

  /**
   * The feature id for the '<em><b>Ref C</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE__REF_C = 8;

  /**
   * The number of structural features of the '<em>Alternate Response</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_RESPONSE_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.AlternatePrecedenceImpl <em>Alternate Precedence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.AlternatePrecedenceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAlternatePrecedence()
   * @generated
   */
  int ALTERNATE_PRECEDENCE = 31;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__EITHER_B = 0;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__REF_B = 1;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__EITHER_A = 2;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__REF_A = 3;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__MIN_VAL = 4;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__MAX_VAL = 5;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__NOT = 6;

  /**
   * The feature id for the '<em><b>Either C</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__EITHER_C = 7;

  /**
   * The feature id for the '<em><b>Ref C</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE__REF_C = 8;

  /**
   * The number of structural features of the '<em>Alternate Precedence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ALTERNATE_PRECEDENCE_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ResponseImpl <em>Response</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ResponseImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getResponse()
   * @generated
   */
  int RESPONSE = 32;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONSE__EITHER_A = 0;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONSE__REF_A = 1;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONSE__EITHER_B = 2;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONSE__REF_B = 3;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONSE__NOT = 4;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONSE__MIN_VAL = 5;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONSE__MAX_VAL = 6;

  /**
   * The number of structural features of the '<em>Response</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESPONSE_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.PrecedenceImpl <em>Precedence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.PrecedenceImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getPrecedence()
   * @generated
   */
  int PRECEDENCE = 33;

  /**
   * The feature id for the '<em><b>Either B</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__EITHER_B = 0;

  /**
   * The feature id for the '<em><b>Ref B</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__REF_B = 1;

  /**
   * The feature id for the '<em><b>Either A</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__EITHER_A = 2;

  /**
   * The feature id for the '<em><b>Ref A</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__REF_A = 3;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__NOT = 4;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__MIN_VAL = 5;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE__MAX_VAL = 6;

  /**
   * The number of structural features of the '<em>Precedence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PRECEDENCE_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.EndImpl <em>End</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.EndImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getEnd()
   * @generated
   */
  int END = 34;

  /**
   * The feature id for the '<em><b>Ref</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int END__REF = 0;

  /**
   * The number of structural features of the '<em>End</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int END_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.InitImpl <em>Init</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.InitImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getInit()
   * @generated
   */
  int INIT = 35;

  /**
   * The feature id for the '<em><b>Ref</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INIT__REF = 0;

  /**
   * The number of structural features of the '<em>Init</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INIT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.AtMostImpl <em>At Most</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.AtMostImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAtMost()
   * @generated
   */
  int AT_MOST = 36;

  /**
   * The feature id for the '<em><b>Ref</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AT_MOST__REF = 0;

  /**
   * The feature id for the '<em><b>Num</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AT_MOST__NUM = 1;

  /**
   * The number of structural features of the '<em>At Most</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AT_MOST_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.ExactImpl <em>Exact</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.ExactImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getExact()
   * @generated
   */
  int EXACT = 37;

  /**
   * The feature id for the '<em><b>Ref</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT__REF = 0;

  /**
   * The feature id for the '<em><b>Num</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT__NUM = 1;

  /**
   * The feature id for the '<em><b>Consecutively</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT__CONSECUTIVELY = 2;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT__MIN_VAL = 3;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT__MAX_VAL = 4;

  /**
   * The number of structural features of the '<em>Exact</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXACT_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.impl.AtLeastImpl <em>At Least</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.impl.AtLeastImpl
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAtLeast()
   * @generated
   */
  int AT_LEAST = 38;

  /**
   * The feature id for the '<em><b>Ref</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AT_LEAST__REF = 0;

  /**
   * The feature id for the '<em><b>Num</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AT_LEAST__NUM = 1;

  /**
   * The feature id for the '<em><b>Min Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AT_LEAST__MIN_VAL = 2;

  /**
   * The feature id for the '<em><b>Max Val</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AT_LEAST__MAX_VAL = 3;

  /**
   * The number of structural features of the '<em>At Least</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AT_LEAST_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link nl.esi.comma.behavior.scl.scl.ActionType <em>Action Type</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see nl.esi.comma.behavior.scl.scl.ActionType
   * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getActionType()
   * @generated
   */
  int ACTION_TYPE = 39;


  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Model#getFeatures <em>Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Features</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Model#getFeatures()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Features();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Model#getActions <em>Actions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Actions</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Model#getActions()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Actions();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Model#getSequences <em>Sequences</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sequences</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Model#getSequences()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Sequences();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Model#getComposition <em>Composition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Composition</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Model#getComposition()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Composition();

  /**
   * Returns the meta object for the reference list '{@link nl.esi.comma.behavior.scl.scl.Model#getCommonFeatures <em>Common Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Common Features</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Model#getCommonFeatures()
   * @see #getModel()
   * @generated
   */
  EReference getModel_CommonFeatures();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Model#getTemplates <em>Templates</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Templates</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Model#getTemplates()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Templates();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Model#isUseLabels <em>Use Labels</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Use Labels</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Model#isUseLabels()
   * @see #getModel()
   * @generated
   */
  EAttribute getModel_UseLabels();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Composition <em>Composition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Composition</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Composition
   * @generated
   */
  EClass getComposition();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Composition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Composition#getName()
   * @see #getComposition()
   * @generated
   */
  EAttribute getComposition_Name();

  /**
   * Returns the meta object for the reference list '{@link nl.esi.comma.behavior.scl.scl.Composition#getTemplates <em>Templates</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Templates</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Composition#getTemplates()
   * @see #getComposition()
   * @generated
   */
  EReference getComposition_Templates();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Composition#getDescTxt <em>Desc Txt</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Desc Txt</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Composition#getDescTxt()
   * @see #getComposition()
   * @generated
   */
  EAttribute getComposition_DescTxt();

  /**
   * Returns the meta object for the reference list '{@link nl.esi.comma.behavior.scl.scl.Composition#getCommonFeatures <em>Common Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Common Features</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Composition#getCommonFeatures()
   * @see #getComposition()
   * @generated
   */
  EReference getComposition_CommonFeatures();

  /**
   * Returns the meta object for the attribute list '{@link nl.esi.comma.behavior.scl.scl.Composition#getTagStr <em>Tag Str</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Tag Str</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Composition#getTagStr()
   * @see #getComposition()
   * @generated
   */
  EAttribute getComposition_TagStr();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.SequenceDef <em>Sequence Def</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sequence Def</em>'.
   * @see nl.esi.comma.behavior.scl.scl.SequenceDef
   * @generated
   */
  EClass getSequenceDef();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.SequenceDef#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see nl.esi.comma.behavior.scl.scl.SequenceDef#getName()
   * @see #getSequenceDef()
   * @generated
   */
  EAttribute getSequenceDef_Name();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.SequenceDef#getActList <em>Act List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Act List</em>'.
   * @see nl.esi.comma.behavior.scl.scl.SequenceDef#getActList()
   * @see #getSequenceDef()
   * @generated
   */
  EReference getSequenceDef_ActList();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.ParamAct <em>Param Act</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Param Act</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ParamAct
   * @generated
   */
  EClass getParamAct();

  /**
   * Returns the meta object for the reference '{@link nl.esi.comma.behavior.scl.scl.ParamAct#getAct <em>Act</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Act</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ParamAct#getAct()
   * @see #getParamAct()
   * @generated
   */
  EReference getParamAct_Act();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ParamAct#getIdx <em>Idx</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Idx</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ParamAct#getIdx()
   * @see #getParamAct()
   * @generated
   */
  EAttribute getParamAct_Idx();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Ref <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ref</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Ref
   * @generated
   */
  EClass getRef();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.RefStep <em>Ref Step</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ref Step</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RefStep
   * @generated
   */
  EClass getRefStep();

  /**
   * Returns the meta object for the reference '{@link nl.esi.comma.behavior.scl.scl.RefStep#getStep <em>Step</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Step</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RefStep#getStep()
   * @see #getRefStep()
   * @generated
   */
  EReference getRefStep_Step();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.RefStep#getIdx <em>Idx</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Idx</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RefStep#getIdx()
   * @see #getRefStep()
   * @generated
   */
  EAttribute getRefStep_Idx();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.RefSequence <em>Ref Sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Ref Sequence</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RefSequence
   * @generated
   */
  EClass getRefSequence();

  /**
   * Returns the meta object for the reference '{@link nl.esi.comma.behavior.scl.scl.RefSequence#getSeq <em>Seq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Seq</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RefSequence#getSeq()
   * @see #getRefSequence()
   * @generated
   */
  EReference getRefSequence_Seq();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Features <em>Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Features</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Features
   * @generated
   */
  EClass getFeatures();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Features#getFeature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Feature</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Features#getFeature()
   * @see #getFeatures()
   * @generated
   */
  EReference getFeatures_Feature();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Feature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Feature</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Feature
   * @generated
   */
  EClass getFeature();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Feature#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Feature#getName()
   * @see #getFeature()
   * @generated
   */
  EAttribute getFeature_Name();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Actions <em>Actions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Actions</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Actions
   * @generated
   */
  EClass getActions();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Actions#getAct <em>Act</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Act</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Actions#getAct()
   * @see #getActions()
   * @generated
   */
  EReference getActions_Act();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.ActionParam <em>Action Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Action Param</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ActionParam
   * @generated
   */
  EClass getActionParam();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ActionParam#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ActionParam#getParameters()
   * @see #getActionParam()
   * @generated
   */
  EReference getActionParam_Parameters();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Action <em>Action</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Action</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Action
   * @generated
   */
  EClass getAction();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Action#getAct <em>Act</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Act</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Action#getAct()
   * @see #getAction()
   * @generated
   */
  EAttribute getAction_Act();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Action#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Action#getName()
   * @see #getAction()
   * @generated
   */
  EAttribute getAction_Name();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Action#getLabel <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Label</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Action#getLabel()
   * @see #getAction()
   * @generated
   */
  EAttribute getAction_Label();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Action#getActParam <em>Act Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Act Param</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Action#getActParam()
   * @see #getAction()
   * @generated
   */
  EReference getAction_ActParam();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Templates <em>Templates</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Templates</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Templates
   * @generated
   */
  EClass getTemplates();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Templates#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Templates#getName()
   * @see #getTemplates()
   * @generated
   */
  EAttribute getTemplates_Name();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Templates#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Templates#getType()
   * @see #getTemplates()
   * @generated
   */
  EReference getTemplates_Type();

  /**
   * Returns the meta object for the reference list '{@link nl.esi.comma.behavior.scl.scl.Templates#getFeatures <em>Features</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Features</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Templates#getFeatures()
   * @see #getTemplates()
   * @generated
   */
  EReference getTemplates_Features();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Past <em>Past</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Past</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Past
   * @generated
   */
  EClass getPast();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Past#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Past#getType()
   * @see #getPast()
   * @generated
   */
  EReference getPast_Type();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Future <em>Future</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Future</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Future
   * @generated
   */
  EClass getFuture();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Future#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Future#getType()
   * @see #getFuture()
   * @generated
   */
  EReference getFuture_Type();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Dependencies <em>Dependencies</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Dependencies</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Dependencies
   * @generated
   */
  EClass getDependencies();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Dependencies#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Dependencies#getType()
   * @see #getDependencies()
   * @generated
   */
  EReference getDependencies_Type();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Choice <em>Choice</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Choice</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Choice
   * @generated
   */
  EClass getChoice();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Choice#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Choice#getType()
   * @see #getChoice()
   * @generated
   */
  EReference getChoice_Type();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Existential <em>Existential</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Existential</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Existential
   * @generated
   */
  EClass getExistential();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Existential#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Existential#getType()
   * @see #getExistential()
   * @generated
   */
  EReference getExistential_Type();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.ExclusiveChoice <em>Exclusive Choice</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exclusive Choice</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ExclusiveChoice
   * @generated
   */
  EClass getExclusiveChoice();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ExclusiveChoice#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ExclusiveChoice#isEitherA()
   * @see #getExclusiveChoice()
   * @generated
   */
  EAttribute getExclusiveChoice_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ExclusiveChoice#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ExclusiveChoice#getRefA()
   * @see #getExclusiveChoice()
   * @generated
   */
  EReference getExclusiveChoice_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ExclusiveChoice#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ExclusiveChoice#isEitherB()
   * @see #getExclusiveChoice()
   * @generated
   */
  EAttribute getExclusiveChoice_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ExclusiveChoice#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ExclusiveChoice#getRefB()
   * @see #getExclusiveChoice()
   * @generated
   */
  EReference getExclusiveChoice_RefB();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.SimpleChoice <em>Simple Choice</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Simple Choice</em>'.
   * @see nl.esi.comma.behavior.scl.scl.SimpleChoice
   * @generated
   */
  EClass getSimpleChoice();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.SimpleChoice#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.SimpleChoice#getRefA()
   * @see #getSimpleChoice()
   * @generated
   */
  EReference getSimpleChoice_RefA();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.NotChainSuccession <em>Not Chain Succession</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Chain Succession</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotChainSuccession
   * @generated
   */
  EClass getNotChainSuccession();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.NotChainSuccession#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotChainSuccession#isEitherA()
   * @see #getNotChainSuccession()
   * @generated
   */
  EAttribute getNotChainSuccession_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.NotChainSuccession#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotChainSuccession#getRefA()
   * @see #getNotChainSuccession()
   * @generated
   */
  EReference getNotChainSuccession_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.NotChainSuccession#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotChainSuccession#isEitherB()
   * @see #getNotChainSuccession()
   * @generated
   */
  EAttribute getNotChainSuccession_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.NotChainSuccession#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotChainSuccession#getRefB()
   * @see #getNotChainSuccession()
   * @generated
   */
  EReference getNotChainSuccession_RefB();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.NotCoExistance <em>Not Co Existance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Co Existance</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotCoExistance
   * @generated
   */
  EClass getNotCoExistance();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.NotCoExistance#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotCoExistance#getRefA()
   * @see #getNotCoExistance()
   * @generated
   */
  EReference getNotCoExistance_RefA();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.NotSuccession <em>Not Succession</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not Succession</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotSuccession
   * @generated
   */
  EClass getNotSuccession();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.NotSuccession#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotSuccession#isEitherA()
   * @see #getNotSuccession()
   * @generated
   */
  EAttribute getNotSuccession_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.NotSuccession#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotSuccession#getRefA()
   * @see #getNotSuccession()
   * @generated
   */
  EReference getNotSuccession_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.NotSuccession#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotSuccession#isEitherB()
   * @see #getNotSuccession()
   * @generated
   */
  EAttribute getNotSuccession_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.NotSuccession#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.NotSuccession#getRefB()
   * @see #getNotSuccession()
   * @generated
   */
  EReference getNotSuccession_RefB();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.ChainSuccession <em>Chain Succession</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Chain Succession</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainSuccession
   * @generated
   */
  EClass getChainSuccession();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainSuccession#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainSuccession#isEitherA()
   * @see #getChainSuccession()
   * @generated
   */
  EAttribute getChainSuccession_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ChainSuccession#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainSuccession#getRefA()
   * @see #getChainSuccession()
   * @generated
   */
  EReference getChainSuccession_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainSuccession#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainSuccession#isEitherB()
   * @see #getChainSuccession()
   * @generated
   */
  EAttribute getChainSuccession_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ChainSuccession#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainSuccession#getRefB()
   * @see #getChainSuccession()
   * @generated
   */
  EReference getChainSuccession_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainSuccession#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainSuccession#getMinVal()
   * @see #getChainSuccession()
   * @generated
   */
  EAttribute getChainSuccession_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainSuccession#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainSuccession#getMaxVal()
   * @see #getChainSuccession()
   * @generated
   */
  EAttribute getChainSuccession_MaxVal();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.AlternateSuccession <em>Alternate Succession</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Alternate Succession</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateSuccession
   * @generated
   */
  EClass getAlternateSuccession();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateSuccession#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateSuccession#isEitherA()
   * @see #getAlternateSuccession()
   * @generated
   */
  EAttribute getAlternateSuccession_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternateSuccession#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateSuccession#getRefA()
   * @see #getAlternateSuccession()
   * @generated
   */
  EReference getAlternateSuccession_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateSuccession#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateSuccession#isEitherB()
   * @see #getAlternateSuccession()
   * @generated
   */
  EAttribute getAlternateSuccession_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternateSuccession#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateSuccession#getRefB()
   * @see #getAlternateSuccession()
   * @generated
   */
  EReference getAlternateSuccession_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateSuccession#isEitherC <em>Either C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either C</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateSuccession#isEitherC()
   * @see #getAlternateSuccession()
   * @generated
   */
  EAttribute getAlternateSuccession_EitherC();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateSuccession#isNegation <em>Negation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Negation</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateSuccession#isNegation()
   * @see #getAlternateSuccession()
   * @generated
   */
  EAttribute getAlternateSuccession_Negation();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternateSuccession#getRefC <em>Ref C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref C</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateSuccession#getRefC()
   * @see #getAlternateSuccession()
   * @generated
   */
  EReference getAlternateSuccession_RefC();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Succession <em>Succession</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Succession</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Succession
   * @generated
   */
  EClass getSuccession();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Succession#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Succession#isEitherA()
   * @see #getSuccession()
   * @generated
   */
  EAttribute getSuccession_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Succession#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Succession#getRefA()
   * @see #getSuccession()
   * @generated
   */
  EReference getSuccession_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Succession#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Succession#isEitherB()
   * @see #getSuccession()
   * @generated
   */
  EAttribute getSuccession_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Succession#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Succession#getRefB()
   * @see #getSuccession()
   * @generated
   */
  EReference getSuccession_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Succession#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Succession#getMinVal()
   * @see #getSuccession()
   * @generated
   */
  EAttribute getSuccession_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Succession#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Succession#getMaxVal()
   * @see #getSuccession()
   * @generated
   */
  EAttribute getSuccession_MaxVal();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.CoExistance <em>Co Existance</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Co Existance</em>'.
   * @see nl.esi.comma.behavior.scl.scl.CoExistance
   * @generated
   */
  EClass getCoExistance();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.CoExistance#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.CoExistance#getRefA()
   * @see #getCoExistance()
   * @generated
   */
  EReference getCoExistance_RefA();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.RespondedExistence <em>Responded Existence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Responded Existence</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RespondedExistence
   * @generated
   */
  EClass getRespondedExistence();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.RespondedExistence#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RespondedExistence#isEitherA()
   * @see #getRespondedExistence()
   * @generated
   */
  EAttribute getRespondedExistence_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.RespondedExistence#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RespondedExistence#getRefA()
   * @see #getRespondedExistence()
   * @generated
   */
  EReference getRespondedExistence_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.RespondedExistence#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RespondedExistence#isEitherB()
   * @see #getRespondedExistence()
   * @generated
   */
  EAttribute getRespondedExistence_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.RespondedExistence#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.RespondedExistence#getRefB()
   * @see #getRespondedExistence()
   * @generated
   */
  EReference getRespondedExistence_RefB();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.ChainPrecedence <em>Chain Precedence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Chain Precedence</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainPrecedence
   * @generated
   */
  EClass getChainPrecedence();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainPrecedence#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainPrecedence#isEitherB()
   * @see #getChainPrecedence()
   * @generated
   */
  EAttribute getChainPrecedence_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ChainPrecedence#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainPrecedence#getRefB()
   * @see #getChainPrecedence()
   * @generated
   */
  EReference getChainPrecedence_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainPrecedence#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainPrecedence#isEitherA()
   * @see #getChainPrecedence()
   * @generated
   */
  EAttribute getChainPrecedence_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ChainPrecedence#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainPrecedence#getRefA()
   * @see #getChainPrecedence()
   * @generated
   */
  EReference getChainPrecedence_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainPrecedence#isNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainPrecedence#isNot()
   * @see #getChainPrecedence()
   * @generated
   */
  EAttribute getChainPrecedence_Not();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainPrecedence#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainPrecedence#getMinVal()
   * @see #getChainPrecedence()
   * @generated
   */
  EAttribute getChainPrecedence_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainPrecedence#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainPrecedence#getMaxVal()
   * @see #getChainPrecedence()
   * @generated
   */
  EAttribute getChainPrecedence_MaxVal();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.ChainResponse <em>Chain Response</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Chain Response</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainResponse
   * @generated
   */
  EClass getChainResponse();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainResponse#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainResponse#isEitherA()
   * @see #getChainResponse()
   * @generated
   */
  EAttribute getChainResponse_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ChainResponse#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainResponse#getRefA()
   * @see #getChainResponse()
   * @generated
   */
  EReference getChainResponse_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainResponse#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainResponse#isEitherB()
   * @see #getChainResponse()
   * @generated
   */
  EAttribute getChainResponse_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.ChainResponse#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainResponse#getRefB()
   * @see #getChainResponse()
   * @generated
   */
  EReference getChainResponse_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainResponse#isNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainResponse#isNot()
   * @see #getChainResponse()
   * @generated
   */
  EAttribute getChainResponse_Not();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainResponse#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainResponse#getMinVal()
   * @see #getChainResponse()
   * @generated
   */
  EAttribute getChainResponse_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.ChainResponse#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ChainResponse#getMaxVal()
   * @see #getChainResponse()
   * @generated
   */
  EAttribute getChainResponse_MaxVal();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse <em>Alternate Response</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Alternate Response</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse
   * @generated
   */
  EClass getAlternateResponse();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#isEitherA()
   * @see #getAlternateResponse()
   * @generated
   */
  EAttribute getAlternateResponse_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#getRefA()
   * @see #getAlternateResponse()
   * @generated
   */
  EReference getAlternateResponse_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#isEitherB()
   * @see #getAlternateResponse()
   * @generated
   */
  EAttribute getAlternateResponse_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#getRefB()
   * @see #getAlternateResponse()
   * @generated
   */
  EReference getAlternateResponse_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#getMinVal()
   * @see #getAlternateResponse()
   * @generated
   */
  EAttribute getAlternateResponse_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#getMaxVal()
   * @see #getAlternateResponse()
   * @generated
   */
  EAttribute getAlternateResponse_MaxVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#isNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#isNot()
   * @see #getAlternateResponse()
   * @generated
   */
  EAttribute getAlternateResponse_Not();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#isEitherC <em>Either C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either C</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#isEitherC()
   * @see #getAlternateResponse()
   * @generated
   */
  EAttribute getAlternateResponse_EitherC();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternateResponse#getRefC <em>Ref C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref C</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternateResponse#getRefC()
   * @see #getAlternateResponse()
   * @generated
   */
  EReference getAlternateResponse_RefC();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence <em>Alternate Precedence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Alternate Precedence</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence
   * @generated
   */
  EClass getAlternatePrecedence();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#isEitherB()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EAttribute getAlternatePrecedence_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getRefB()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EReference getAlternatePrecedence_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#isEitherA()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EAttribute getAlternatePrecedence_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getRefA()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EReference getAlternatePrecedence_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getMinVal()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EAttribute getAlternatePrecedence_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getMaxVal()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EAttribute getAlternatePrecedence_MaxVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#isNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#isNot()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EAttribute getAlternatePrecedence_Not();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#isEitherC <em>Either C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either C</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#isEitherC()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EAttribute getAlternatePrecedence_EitherC();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getRefC <em>Ref C</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref C</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AlternatePrecedence#getRefC()
   * @see #getAlternatePrecedence()
   * @generated
   */
  EReference getAlternatePrecedence_RefC();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Response <em>Response</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Response</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Response
   * @generated
   */
  EClass getResponse();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Response#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Response#isEitherA()
   * @see #getResponse()
   * @generated
   */
  EAttribute getResponse_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Response#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Response#getRefA()
   * @see #getResponse()
   * @generated
   */
  EReference getResponse_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Response#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Response#isEitherB()
   * @see #getResponse()
   * @generated
   */
  EAttribute getResponse_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Response#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Response#getRefB()
   * @see #getResponse()
   * @generated
   */
  EReference getResponse_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Response#isNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Response#isNot()
   * @see #getResponse()
   * @generated
   */
  EAttribute getResponse_Not();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Response#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Response#getMinVal()
   * @see #getResponse()
   * @generated
   */
  EAttribute getResponse_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Response#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Response#getMaxVal()
   * @see #getResponse()
   * @generated
   */
  EAttribute getResponse_MaxVal();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Precedence <em>Precedence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Precedence</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Precedence
   * @generated
   */
  EClass getPrecedence();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Precedence#isEitherB <em>Either B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Precedence#isEitherB()
   * @see #getPrecedence()
   * @generated
   */
  EAttribute getPrecedence_EitherB();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Precedence#getRefB <em>Ref B</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref B</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Precedence#getRefB()
   * @see #getPrecedence()
   * @generated
   */
  EReference getPrecedence_RefB();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Precedence#isEitherA <em>Either A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Either A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Precedence#isEitherA()
   * @see #getPrecedence()
   * @generated
   */
  EAttribute getPrecedence_EitherA();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Precedence#getRefA <em>Ref A</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref A</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Precedence#getRefA()
   * @see #getPrecedence()
   * @generated
   */
  EReference getPrecedence_RefA();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Precedence#isNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Precedence#isNot()
   * @see #getPrecedence()
   * @generated
   */
  EAttribute getPrecedence_Not();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Precedence#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Precedence#getMinVal()
   * @see #getPrecedence()
   * @generated
   */
  EAttribute getPrecedence_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Precedence#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Precedence#getMaxVal()
   * @see #getPrecedence()
   * @generated
   */
  EAttribute getPrecedence_MaxVal();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.End <em>End</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>End</em>'.
   * @see nl.esi.comma.behavior.scl.scl.End
   * @generated
   */
  EClass getEnd();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.End#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref</em>'.
   * @see nl.esi.comma.behavior.scl.scl.End#getRef()
   * @see #getEnd()
   * @generated
   */
  EReference getEnd_Ref();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Init <em>Init</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Init</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Init
   * @generated
   */
  EClass getInit();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Init#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Init#getRef()
   * @see #getInit()
   * @generated
   */
  EReference getInit_Ref();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.AtMost <em>At Most</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>At Most</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AtMost
   * @generated
   */
  EClass getAtMost();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AtMost#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AtMost#getRef()
   * @see #getAtMost()
   * @generated
   */
  EReference getAtMost_Ref();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AtMost#getNum <em>Num</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AtMost#getNum()
   * @see #getAtMost()
   * @generated
   */
  EAttribute getAtMost_Num();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.Exact <em>Exact</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Exact</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Exact
   * @generated
   */
  EClass getExact();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.Exact#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Exact#getRef()
   * @see #getExact()
   * @generated
   */
  EReference getExact_Ref();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Exact#getNum <em>Num</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Exact#getNum()
   * @see #getExact()
   * @generated
   */
  EAttribute getExact_Num();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Exact#isConsecutively <em>Consecutively</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Consecutively</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Exact#isConsecutively()
   * @see #getExact()
   * @generated
   */
  EAttribute getExact_Consecutively();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Exact#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Exact#getMinVal()
   * @see #getExact()
   * @generated
   */
  EAttribute getExact_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.Exact#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.Exact#getMaxVal()
   * @see #getExact()
   * @generated
   */
  EAttribute getExact_MaxVal();

  /**
   * Returns the meta object for class '{@link nl.esi.comma.behavior.scl.scl.AtLeast <em>At Least</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>At Least</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AtLeast
   * @generated
   */
  EClass getAtLeast();

  /**
   * Returns the meta object for the containment reference list '{@link nl.esi.comma.behavior.scl.scl.AtLeast#getRef <em>Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Ref</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AtLeast#getRef()
   * @see #getAtLeast()
   * @generated
   */
  EReference getAtLeast_Ref();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AtLeast#getNum <em>Num</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Num</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AtLeast#getNum()
   * @see #getAtLeast()
   * @generated
   */
  EAttribute getAtLeast_Num();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AtLeast#getMinVal <em>Min Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Min Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AtLeast#getMinVal()
   * @see #getAtLeast()
   * @generated
   */
  EAttribute getAtLeast_MinVal();

  /**
   * Returns the meta object for the attribute '{@link nl.esi.comma.behavior.scl.scl.AtLeast#getMaxVal <em>Max Val</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Max Val</em>'.
   * @see nl.esi.comma.behavior.scl.scl.AtLeast#getMaxVal()
   * @see #getAtLeast()
   * @generated
   */
  EAttribute getAtLeast_MaxVal();

  /**
   * Returns the meta object for enum '{@link nl.esi.comma.behavior.scl.scl.ActionType <em>Action Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>Action Type</em>'.
   * @see nl.esi.comma.behavior.scl.scl.ActionType
   * @generated
   */
  EEnum getActionType();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  SclFactory getSclFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ModelImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Features</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__FEATURES = eINSTANCE.getModel_Features();

    /**
     * The meta object literal for the '<em><b>Actions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__ACTIONS = eINSTANCE.getModel_Actions();

    /**
     * The meta object literal for the '<em><b>Sequences</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__SEQUENCES = eINSTANCE.getModel_Sequences();

    /**
     * The meta object literal for the '<em><b>Composition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__COMPOSITION = eINSTANCE.getModel_Composition();

    /**
     * The meta object literal for the '<em><b>Common Features</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__COMMON_FEATURES = eINSTANCE.getModel_CommonFeatures();

    /**
     * The meta object literal for the '<em><b>Templates</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__TEMPLATES = eINSTANCE.getModel_Templates();

    /**
     * The meta object literal for the '<em><b>Use Labels</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODEL__USE_LABELS = eINSTANCE.getModel_UseLabels();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.CompositionImpl <em>Composition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.CompositionImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getComposition()
     * @generated
     */
    EClass COMPOSITION = eINSTANCE.getComposition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPOSITION__NAME = eINSTANCE.getComposition_Name();

    /**
     * The meta object literal for the '<em><b>Templates</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOSITION__TEMPLATES = eINSTANCE.getComposition_Templates();

    /**
     * The meta object literal for the '<em><b>Desc Txt</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPOSITION__DESC_TXT = eINSTANCE.getComposition_DescTxt();

    /**
     * The meta object literal for the '<em><b>Common Features</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOSITION__COMMON_FEATURES = eINSTANCE.getComposition_CommonFeatures();

    /**
     * The meta object literal for the '<em><b>Tag Str</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPOSITION__TAG_STR = eINSTANCE.getComposition_TagStr();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.SequenceDefImpl <em>Sequence Def</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.SequenceDefImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getSequenceDef()
     * @generated
     */
    EClass SEQUENCE_DEF = eINSTANCE.getSequenceDef();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SEQUENCE_DEF__NAME = eINSTANCE.getSequenceDef_Name();

    /**
     * The meta object literal for the '<em><b>Act List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SEQUENCE_DEF__ACT_LIST = eINSTANCE.getSequenceDef_ActList();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ParamActImpl <em>Param Act</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ParamActImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getParamAct()
     * @generated
     */
    EClass PARAM_ACT = eINSTANCE.getParamAct();

    /**
     * The meta object literal for the '<em><b>Act</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAM_ACT__ACT = eINSTANCE.getParamAct_Act();

    /**
     * The meta object literal for the '<em><b>Idx</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAM_ACT__IDX = eINSTANCE.getParamAct_Idx();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.RefImpl <em>Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.RefImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getRef()
     * @generated
     */
    EClass REF = eINSTANCE.getRef();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.RefStepImpl <em>Ref Step</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.RefStepImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getRefStep()
     * @generated
     */
    EClass REF_STEP = eINSTANCE.getRefStep();

    /**
     * The meta object literal for the '<em><b>Step</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REF_STEP__STEP = eINSTANCE.getRefStep_Step();

    /**
     * The meta object literal for the '<em><b>Idx</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute REF_STEP__IDX = eINSTANCE.getRefStep_Idx();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.RefSequenceImpl <em>Ref Sequence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.RefSequenceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getRefSequence()
     * @generated
     */
    EClass REF_SEQUENCE = eINSTANCE.getRefSequence();

    /**
     * The meta object literal for the '<em><b>Seq</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REF_SEQUENCE__SEQ = eINSTANCE.getRefSequence_Seq();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.FeaturesImpl <em>Features</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.FeaturesImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getFeatures()
     * @generated
     */
    EClass FEATURES = eINSTANCE.getFeatures();

    /**
     * The meta object literal for the '<em><b>Feature</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FEATURES__FEATURE = eINSTANCE.getFeatures_Feature();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.FeatureImpl <em>Feature</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.FeatureImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getFeature()
     * @generated
     */
    EClass FEATURE = eINSTANCE.getFeature();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FEATURE__NAME = eINSTANCE.getFeature_Name();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ActionsImpl <em>Actions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ActionsImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getActions()
     * @generated
     */
    EClass ACTIONS = eINSTANCE.getActions();

    /**
     * The meta object literal for the '<em><b>Act</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTIONS__ACT = eINSTANCE.getActions_Act();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ActionParamImpl <em>Action Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ActionParamImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getActionParam()
     * @generated
     */
    EClass ACTION_PARAM = eINSTANCE.getActionParam();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTION_PARAM__PARAMETERS = eINSTANCE.getActionParam_Parameters();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ActionImpl <em>Action</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ActionImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAction()
     * @generated
     */
    EClass ACTION = eINSTANCE.getAction();

    /**
     * The meta object literal for the '<em><b>Act</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ACTION__ACT = eINSTANCE.getAction_Act();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ACTION__NAME = eINSTANCE.getAction_Name();

    /**
     * The meta object literal for the '<em><b>Label</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ACTION__LABEL = eINSTANCE.getAction_Label();

    /**
     * The meta object literal for the '<em><b>Act Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTION__ACT_PARAM = eINSTANCE.getAction_ActParam();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.TemplatesImpl <em>Templates</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.TemplatesImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getTemplates()
     * @generated
     */
    EClass TEMPLATES = eINSTANCE.getTemplates();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TEMPLATES__NAME = eINSTANCE.getTemplates_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TEMPLATES__TYPE = eINSTANCE.getTemplates_Type();

    /**
     * The meta object literal for the '<em><b>Features</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TEMPLATES__FEATURES = eINSTANCE.getTemplates_Features();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.PastImpl <em>Past</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.PastImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getPast()
     * @generated
     */
    EClass PAST = eINSTANCE.getPast();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PAST__TYPE = eINSTANCE.getPast_Type();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.FutureImpl <em>Future</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.FutureImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getFuture()
     * @generated
     */
    EClass FUTURE = eINSTANCE.getFuture();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUTURE__TYPE = eINSTANCE.getFuture_Type();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.DependenciesImpl <em>Dependencies</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.DependenciesImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getDependencies()
     * @generated
     */
    EClass DEPENDENCIES = eINSTANCE.getDependencies();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DEPENDENCIES__TYPE = eINSTANCE.getDependencies_Type();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ChoiceImpl <em>Choice</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ChoiceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getChoice()
     * @generated
     */
    EClass CHOICE = eINSTANCE.getChoice();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHOICE__TYPE = eINSTANCE.getChoice_Type();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ExistentialImpl <em>Existential</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ExistentialImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getExistential()
     * @generated
     */
    EClass EXISTENTIAL = eINSTANCE.getExistential();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXISTENTIAL__TYPE = eINSTANCE.getExistential_Type();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ExclusiveChoiceImpl <em>Exclusive Choice</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ExclusiveChoiceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getExclusiveChoice()
     * @generated
     */
    EClass EXCLUSIVE_CHOICE = eINSTANCE.getExclusiveChoice();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXCLUSIVE_CHOICE__EITHER_A = eINSTANCE.getExclusiveChoice_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXCLUSIVE_CHOICE__REF_A = eINSTANCE.getExclusiveChoice_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXCLUSIVE_CHOICE__EITHER_B = eINSTANCE.getExclusiveChoice_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXCLUSIVE_CHOICE__REF_B = eINSTANCE.getExclusiveChoice_RefB();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.SimpleChoiceImpl <em>Simple Choice</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.SimpleChoiceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getSimpleChoice()
     * @generated
     */
    EClass SIMPLE_CHOICE = eINSTANCE.getSimpleChoice();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_CHOICE__REF_A = eINSTANCE.getSimpleChoice_RefA();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.NotChainSuccessionImpl <em>Not Chain Succession</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.NotChainSuccessionImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getNotChainSuccession()
     * @generated
     */
    EClass NOT_CHAIN_SUCCESSION = eINSTANCE.getNotChainSuccession();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NOT_CHAIN_SUCCESSION__EITHER_A = eINSTANCE.getNotChainSuccession_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_CHAIN_SUCCESSION__REF_A = eINSTANCE.getNotChainSuccession_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NOT_CHAIN_SUCCESSION__EITHER_B = eINSTANCE.getNotChainSuccession_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_CHAIN_SUCCESSION__REF_B = eINSTANCE.getNotChainSuccession_RefB();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.NotCoExistanceImpl <em>Not Co Existance</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.NotCoExistanceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getNotCoExistance()
     * @generated
     */
    EClass NOT_CO_EXISTANCE = eINSTANCE.getNotCoExistance();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_CO_EXISTANCE__REF_A = eINSTANCE.getNotCoExistance_RefA();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.NotSuccessionImpl <em>Not Succession</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.NotSuccessionImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getNotSuccession()
     * @generated
     */
    EClass NOT_SUCCESSION = eINSTANCE.getNotSuccession();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NOT_SUCCESSION__EITHER_A = eINSTANCE.getNotSuccession_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_SUCCESSION__REF_A = eINSTANCE.getNotSuccession_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NOT_SUCCESSION__EITHER_B = eINSTANCE.getNotSuccession_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT_SUCCESSION__REF_B = eINSTANCE.getNotSuccession_RefB();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ChainSuccessionImpl <em>Chain Succession</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ChainSuccessionImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getChainSuccession()
     * @generated
     */
    EClass CHAIN_SUCCESSION = eINSTANCE.getChainSuccession();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_SUCCESSION__EITHER_A = eINSTANCE.getChainSuccession_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAIN_SUCCESSION__REF_A = eINSTANCE.getChainSuccession_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_SUCCESSION__EITHER_B = eINSTANCE.getChainSuccession_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAIN_SUCCESSION__REF_B = eINSTANCE.getChainSuccession_RefB();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_SUCCESSION__MIN_VAL = eINSTANCE.getChainSuccession_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_SUCCESSION__MAX_VAL = eINSTANCE.getChainSuccession_MaxVal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.AlternateSuccessionImpl <em>Alternate Succession</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.AlternateSuccessionImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAlternateSuccession()
     * @generated
     */
    EClass ALTERNATE_SUCCESSION = eINSTANCE.getAlternateSuccession();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_SUCCESSION__EITHER_A = eINSTANCE.getAlternateSuccession_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_SUCCESSION__REF_A = eINSTANCE.getAlternateSuccession_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_SUCCESSION__EITHER_B = eINSTANCE.getAlternateSuccession_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_SUCCESSION__REF_B = eINSTANCE.getAlternateSuccession_RefB();

    /**
     * The meta object literal for the '<em><b>Either C</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_SUCCESSION__EITHER_C = eINSTANCE.getAlternateSuccession_EitherC();

    /**
     * The meta object literal for the '<em><b>Negation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_SUCCESSION__NEGATION = eINSTANCE.getAlternateSuccession_Negation();

    /**
     * The meta object literal for the '<em><b>Ref C</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_SUCCESSION__REF_C = eINSTANCE.getAlternateSuccession_RefC();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.SuccessionImpl <em>Succession</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.SuccessionImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getSuccession()
     * @generated
     */
    EClass SUCCESSION = eINSTANCE.getSuccession();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SUCCESSION__EITHER_A = eINSTANCE.getSuccession_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUCCESSION__REF_A = eINSTANCE.getSuccession_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SUCCESSION__EITHER_B = eINSTANCE.getSuccession_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUCCESSION__REF_B = eINSTANCE.getSuccession_RefB();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SUCCESSION__MIN_VAL = eINSTANCE.getSuccession_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SUCCESSION__MAX_VAL = eINSTANCE.getSuccession_MaxVal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.CoExistanceImpl <em>Co Existance</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.CoExistanceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getCoExistance()
     * @generated
     */
    EClass CO_EXISTANCE = eINSTANCE.getCoExistance();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CO_EXISTANCE__REF_A = eINSTANCE.getCoExistance_RefA();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.RespondedExistenceImpl <em>Responded Existence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.RespondedExistenceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getRespondedExistence()
     * @generated
     */
    EClass RESPONDED_EXISTENCE = eINSTANCE.getRespondedExistence();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RESPONDED_EXISTENCE__EITHER_A = eINSTANCE.getRespondedExistence_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RESPONDED_EXISTENCE__REF_A = eINSTANCE.getRespondedExistence_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RESPONDED_EXISTENCE__EITHER_B = eINSTANCE.getRespondedExistence_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RESPONDED_EXISTENCE__REF_B = eINSTANCE.getRespondedExistence_RefB();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ChainPrecedenceImpl <em>Chain Precedence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ChainPrecedenceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getChainPrecedence()
     * @generated
     */
    EClass CHAIN_PRECEDENCE = eINSTANCE.getChainPrecedence();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_PRECEDENCE__EITHER_B = eINSTANCE.getChainPrecedence_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAIN_PRECEDENCE__REF_B = eINSTANCE.getChainPrecedence_RefB();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_PRECEDENCE__EITHER_A = eINSTANCE.getChainPrecedence_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAIN_PRECEDENCE__REF_A = eINSTANCE.getChainPrecedence_RefA();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_PRECEDENCE__NOT = eINSTANCE.getChainPrecedence_Not();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_PRECEDENCE__MIN_VAL = eINSTANCE.getChainPrecedence_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_PRECEDENCE__MAX_VAL = eINSTANCE.getChainPrecedence_MaxVal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ChainResponseImpl <em>Chain Response</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ChainResponseImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getChainResponse()
     * @generated
     */
    EClass CHAIN_RESPONSE = eINSTANCE.getChainResponse();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_RESPONSE__EITHER_A = eINSTANCE.getChainResponse_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAIN_RESPONSE__REF_A = eINSTANCE.getChainResponse_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_RESPONSE__EITHER_B = eINSTANCE.getChainResponse_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CHAIN_RESPONSE__REF_B = eINSTANCE.getChainResponse_RefB();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_RESPONSE__NOT = eINSTANCE.getChainResponse_Not();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_RESPONSE__MIN_VAL = eINSTANCE.getChainResponse_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CHAIN_RESPONSE__MAX_VAL = eINSTANCE.getChainResponse_MaxVal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.AlternateResponseImpl <em>Alternate Response</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.AlternateResponseImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAlternateResponse()
     * @generated
     */
    EClass ALTERNATE_RESPONSE = eINSTANCE.getAlternateResponse();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_RESPONSE__EITHER_A = eINSTANCE.getAlternateResponse_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_RESPONSE__REF_A = eINSTANCE.getAlternateResponse_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_RESPONSE__EITHER_B = eINSTANCE.getAlternateResponse_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_RESPONSE__REF_B = eINSTANCE.getAlternateResponse_RefB();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_RESPONSE__MIN_VAL = eINSTANCE.getAlternateResponse_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_RESPONSE__MAX_VAL = eINSTANCE.getAlternateResponse_MaxVal();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_RESPONSE__NOT = eINSTANCE.getAlternateResponse_Not();

    /**
     * The meta object literal for the '<em><b>Either C</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_RESPONSE__EITHER_C = eINSTANCE.getAlternateResponse_EitherC();

    /**
     * The meta object literal for the '<em><b>Ref C</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_RESPONSE__REF_C = eINSTANCE.getAlternateResponse_RefC();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.AlternatePrecedenceImpl <em>Alternate Precedence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.AlternatePrecedenceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAlternatePrecedence()
     * @generated
     */
    EClass ALTERNATE_PRECEDENCE = eINSTANCE.getAlternatePrecedence();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_PRECEDENCE__EITHER_B = eINSTANCE.getAlternatePrecedence_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_PRECEDENCE__REF_B = eINSTANCE.getAlternatePrecedence_RefB();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_PRECEDENCE__EITHER_A = eINSTANCE.getAlternatePrecedence_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_PRECEDENCE__REF_A = eINSTANCE.getAlternatePrecedence_RefA();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_PRECEDENCE__MIN_VAL = eINSTANCE.getAlternatePrecedence_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_PRECEDENCE__MAX_VAL = eINSTANCE.getAlternatePrecedence_MaxVal();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_PRECEDENCE__NOT = eINSTANCE.getAlternatePrecedence_Not();

    /**
     * The meta object literal for the '<em><b>Either C</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ALTERNATE_PRECEDENCE__EITHER_C = eINSTANCE.getAlternatePrecedence_EitherC();

    /**
     * The meta object literal for the '<em><b>Ref C</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ALTERNATE_PRECEDENCE__REF_C = eINSTANCE.getAlternatePrecedence_RefC();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ResponseImpl <em>Response</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ResponseImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getResponse()
     * @generated
     */
    EClass RESPONSE = eINSTANCE.getResponse();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RESPONSE__EITHER_A = eINSTANCE.getResponse_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RESPONSE__REF_A = eINSTANCE.getResponse_RefA();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RESPONSE__EITHER_B = eINSTANCE.getResponse_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RESPONSE__REF_B = eINSTANCE.getResponse_RefB();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RESPONSE__NOT = eINSTANCE.getResponse_Not();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RESPONSE__MIN_VAL = eINSTANCE.getResponse_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RESPONSE__MAX_VAL = eINSTANCE.getResponse_MaxVal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.PrecedenceImpl <em>Precedence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.PrecedenceImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getPrecedence()
     * @generated
     */
    EClass PRECEDENCE = eINSTANCE.getPrecedence();

    /**
     * The meta object literal for the '<em><b>Either B</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE__EITHER_B = eINSTANCE.getPrecedence_EitherB();

    /**
     * The meta object literal for the '<em><b>Ref B</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRECEDENCE__REF_B = eINSTANCE.getPrecedence_RefB();

    /**
     * The meta object literal for the '<em><b>Either A</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE__EITHER_A = eINSTANCE.getPrecedence_EitherA();

    /**
     * The meta object literal for the '<em><b>Ref A</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PRECEDENCE__REF_A = eINSTANCE.getPrecedence_RefA();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE__NOT = eINSTANCE.getPrecedence_Not();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE__MIN_VAL = eINSTANCE.getPrecedence_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PRECEDENCE__MAX_VAL = eINSTANCE.getPrecedence_MaxVal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.EndImpl <em>End</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.EndImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getEnd()
     * @generated
     */
    EClass END = eINSTANCE.getEnd();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference END__REF = eINSTANCE.getEnd_Ref();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.InitImpl <em>Init</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.InitImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getInit()
     * @generated
     */
    EClass INIT = eINSTANCE.getInit();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INIT__REF = eINSTANCE.getInit_Ref();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.AtMostImpl <em>At Most</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.AtMostImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAtMost()
     * @generated
     */
    EClass AT_MOST = eINSTANCE.getAtMost();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AT_MOST__REF = eINSTANCE.getAtMost_Ref();

    /**
     * The meta object literal for the '<em><b>Num</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AT_MOST__NUM = eINSTANCE.getAtMost_Num();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.ExactImpl <em>Exact</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.ExactImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getExact()
     * @generated
     */
    EClass EXACT = eINSTANCE.getExact();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXACT__REF = eINSTANCE.getExact_Ref();

    /**
     * The meta object literal for the '<em><b>Num</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXACT__NUM = eINSTANCE.getExact_Num();

    /**
     * The meta object literal for the '<em><b>Consecutively</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXACT__CONSECUTIVELY = eINSTANCE.getExact_Consecutively();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXACT__MIN_VAL = eINSTANCE.getExact_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXACT__MAX_VAL = eINSTANCE.getExact_MaxVal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.impl.AtLeastImpl <em>At Least</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.impl.AtLeastImpl
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getAtLeast()
     * @generated
     */
    EClass AT_LEAST = eINSTANCE.getAtLeast();

    /**
     * The meta object literal for the '<em><b>Ref</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AT_LEAST__REF = eINSTANCE.getAtLeast_Ref();

    /**
     * The meta object literal for the '<em><b>Num</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AT_LEAST__NUM = eINSTANCE.getAtLeast_Num();

    /**
     * The meta object literal for the '<em><b>Min Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AT_LEAST__MIN_VAL = eINSTANCE.getAtLeast_MinVal();

    /**
     * The meta object literal for the '<em><b>Max Val</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AT_LEAST__MAX_VAL = eINSTANCE.getAtLeast_MaxVal();

    /**
     * The meta object literal for the '{@link nl.esi.comma.behavior.scl.scl.ActionType <em>Action Type</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see nl.esi.comma.behavior.scl.scl.ActionType
     * @see nl.esi.comma.behavior.scl.scl.impl.SclPackageImpl#getActionType()
     * @generated
     */
    EEnum ACTION_TYPE = eINSTANCE.getActionType();

  }

} //SclPackage
